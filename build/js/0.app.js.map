{"version":3,"sources":["webpack:///./src/js/utils/orbitControls.js","webpack:///./src/js/data/config.js","webpack:///./src/js/utils/detector.js","webpack:///./src/js/app/components/renderer.js","webpack:///./src/js/app/components/camera.js","webpack:///./src/js/app/components/light.js","webpack:///./src/js/app/components/controls.js","webpack:///./src/js/app/helpers/material.js","webpack:///./src/js/app/helpers/stats.js","webpack:///./src/js/app/helpers/geometry.js","webpack:///./src/js/utils/helpers.js","webpack:///./src/js/app/model/texture.js","webpack:///./src/js/app/helpers/meshHelper.js","webpack:///./src/js/app/model/model.js","webpack:///./src/js/utils/keyboard.js","webpack:///./src/js/app/managers/interaction.js","webpack:///./src/js/app/managers/datGUI.js","webpack:///./src/js/app/main.js","webpack:///./src/js/app.js"],"names":["module","exports","THREE","MOUSE","OrbitConstraint","object","this","target","Vector3","minDistance","maxDistance","Infinity","minZoom","maxZoom","minPolarAngle","maxPolarAngle","Math","PI","minAzimuthAngle","maxAzimuthAngle","enableDamping","dampingFactor","theta","phi","v","offset","quat","quatInverse","lastPosition","lastQuaternion","scope","EPS","phiDelta","thetaDelta","scale","panOffset","zoomChanged","getPolarAngle","getAzimuthalAngle","rotateLeft","angle","rotateUp","panLeft","distance","te","matrix","elements","set","multiplyScalar","add","panUp","pan","deltaX","deltaY","screenWidth","screenHeight","PerspectiveCamera","targetDistance","position","clone","sub","length","tan","fov","OrthographicCamera","right","left","top","bottom","console","warn","dollyIn","dollyScale","zoom","max","min","updateProjectionMatrix","dollyOut","update","Quaternion","setFromUnitVectors","up","inverse","copy","applyQuaternion","atan2","x","z","sqrt","y","radius","sin","cos","lookAt","distanceToSquared","dot","quaternion","OrbitControls","domElement","constraint","undefined","document","Object","defineProperty","get","enabled","center","enableZoom","zoomSpeed","enableRotate","rotateSpeed","enablePan","keyPanSpeed","autoRotate","autoRotateSpeed","enableKeys","keys","LEFT","UP","RIGHT","BOTTOM","mouseButtons","ORBIT","ZOOM","MIDDLE","PAN","rotateStart","Vector2","rotateEnd","rotateDelta","panStart","panEnd","panDelta","dollyStart","dollyEnd","dollyDelta","STATE","NONE","ROTATE","DOLLY","TOUCH_ROTATE","TOUCH_DOLLY","TOUCH_PAN","state","target0","position0","zoom0","changeEvent","type","startEvent","endEvent","element","body","clientWidth","clientHeight","getZoomScale","pow","onMouseDown","event","preventDefault","button","clientX","clientY","addEventListener","onMouseMove","onMouseUp","dispatchEvent","subVectors","removeEventListener","onMouseWheel","stopPropagation","delta","wheelDelta","detail","onKeyDown","keyCode","touchstart","touches","pageX","pageY","dx","dy","touchmove","touchend","contextmenu","reset","dispose","window","prototype","create","EventDispatcher","constructor","defineProperties","value","noZoom","noRotate","noPan","noKeys","staticMoving","dynamicDampingFactor","config","isDev","isShowingStats","isLoaded","isTweening","isRotating","isMouseMoving","isMouseOver","maxAnisotropy","dpr","easing","TWEEN","Easing","Quadratic","InOut","duration","model","path","texture","imageFiles","name","image","mesh","enableHelper","wireframe","translucent","material","color","emissive","fog","near","camera","far","aspect","posX","posY","posZ","controls","ambientLight","directionalLight","intensity","shadow","helperEnabled","bias","mapWidth","mapHeight","pointLight","hemiLight","groundColor","detector","canvas","CanvasRenderingContext2D","webgl","createElement","WebGLRenderingContext","getContext","e","workers","Worker","fileapi","File","FileReader","FileList","Blob","getWebGLErrorMessage","id","style","fontFamily","fontSize","fontWeight","textAlign","background","padding","width","margin","innerHTML","join","addGetWebGLMessage","parameters","parent","appendChild","Renderer","scene","container","_this","_classCallCheck","threeRenderer","antialias","alpha","setClearColor","setPixelRatio","devicePixelRatio","shadowMap","Config","getMaxAnisotropy","updateSize","setSize","offsetWidth","offsetHeight","render","Camera","renderer","camera_classCallCheck","height","threeCamera","Light","light_classCallCheck","init","visible","castShadow","mapSize","directionalLightHelper","lightName","Controls","controls_classCallCheck","orbitControls","threeControls","Material","opacity","material_classCallCheck","basic","side","standard","flatShading","roughness","metalness","plane","depthWrite","transparent","map","wire","rS","bS","Geometry","textures","geometry_classCallCheck","geo","cube","widthSegments","arguments","heightSegments","depth","rotation","_mesh$position","_mesh$rotation","log","apply","_toConsumableArray","receiveShadow","Stats","stats_classCallCheck","start","tick","frame","end","BrowserStats","rStats","CSSPath","userTimingAPI","values","caption","over","average","avgMs","fps","below","calls","raf","rstats","groups","fractions","base","steps","plugins","Helpers","fn","threshhold","last","deferTimer","context","now","Date","args","clearTimeout","setTimeout","xhr","lengthComputable","percentComplete","loaded","total","round","error","replace","setHex","needsUpdate","geometry","shading","vertexColors","verticesNeedUpdate","normalsNeedUpdate","colorsNeedUpdate","materialKey","key","Texture","texture_classCallCheck","loader","promiseArray","setPath","forEach","imageFile","push","Promise","resolve","reject","load","anisotropy","modelOBJ","logProgress","Error","all","then","i","reason","MeshHelper","meshHelper_classCallCheck","wireLine","depthTest","edges","edgesLine","Model","manager","model_classCallCheck","obj","traverse","child","UV","logError","ALIAS","down","space","tab","escape","Keyboard","keyboard_classCallCheck","keyCodes","onKeyChange","onBlur","_this2","prop","keyDesc","split","pressed","indexOf","toUpperCase","charCodeAt","aliases","aliasKeys","shiftKey","ctrlKey","altKey","metaKey","Interaction","interaction_classCallCheck","timeout","keyboard","throttle","onMouseLeave","onMouseOver","repeat","eventMatches","DatGUI","main","datGUI_classCallCheck","gui","dat","GUI","light","cameraFolder","addFolder","cameraFOVGui","onChange","onFinishChange","cameraAspectGui","addColor","cameraFogNearGui","density","controlsFolder","controlsAutoRotateSpeedGui","meshFolder","ambientLightFolder","directionalLightFolder","directionalLightIntensityGui","directionalLightPositionXGui","directionalLightPositionYGui","directionalLightPositionZGui","shadowFolder","shadowNearGui","shadowFarGui","shadowTopGui","shadowRightGui","shadowBottomGui","shadowLeftGui","shadowBiasGui","pointLightFolder","pointLightIntensityGui","pointLightDistanceGui","pointLightPositionXGui","pointLightPositionYGui","pointLightPositionZGui","hemiLightFolder","hemiLightIntensityGui","hemiLightPositionXGui","hemiLightPositionYGui","hemiLightPositionZGui","Main","main_classCallCheck","clock","t","line","count","curve","particles","traffic","starsGeometry","axis","place","stats","setUp","make","nodeGeometry","nodeMaterial","specular","shininess","node1","receiveShadows","castShadows","rotateY","node2","node","secondNode","points","getPoints","lg","setFromPoints","lm","onProgress","item","concat","onLoad","querySelector","display","starsMaterial","star","random","vertices","pts","updateMatrix","me","children","p","remove","pos","getUtoTmapping","getPoint","tangent","getTangent","normalize","crossVectors","radians","acos","setFromAxisAngle","requestAnimationFrame","bind","Detector","getElementById"],"mappings":"2EAAAA,EAAOC,QAAU,SAASC,GACxB,IAAIC,EAAQD,EAAMC,MAalB,SAASC,EAAkBC,GAEzBC,KAAKD,OAASA,EAIdC,KAAKC,OAAS,IAAIL,EAAMM,QAGxBF,KAAKG,YAAc,EACnBH,KAAKI,YAAcC,IAGnBL,KAAKM,QAAU,EACfN,KAAKO,QAAUF,IAIfL,KAAKQ,cAAgB,EACrBR,KAAKS,cAAgBC,KAAKC,GAI1BX,KAAKY,iBAAoBP,IACzBL,KAAKa,gBAAkBR,IAIvBL,KAAKc,eAAgB,EACrBd,KAAKe,cAAgB,IAKrB,IAKIC,EACAC,EAsCEC,EAmBAA,EA2FAC,EAGAC,EACAC,EAEAC,EACAC,EAjKFC,EAAQxB,KAERyB,EAAM,KAONC,EAAW,EACXC,EAAa,EACbC,EAAQ,EACRC,EAAY,IAAIjC,EAAMM,QACtB4B,GAAc,EAIlB9B,KAAK+B,cAAgB,WAEnB,OAAOd,GAITjB,KAAKgC,kBAAoB,WAEvB,OAAOhB,GAIThB,KAAKiC,WAAa,SAAWC,GAE3BP,GAAcO,GAIhBlC,KAAKmC,SAAW,SAAWD,GAEzBR,GAAYQ,GAKdlC,KAAKoC,SAEClB,EAAI,IAAItB,EAAMM,QAEX,SAAmBmC,GAExB,IAAIC,EAAKtC,KAAKD,OAAOwC,OAAOC,SAG5BtB,EAAEuB,IAAKH,EAAI,GAAKA,EAAI,GAAKA,EAAI,IAC7BpB,EAAEwB,gBAAkBL,GAEpBR,EAAUc,IAAKzB,KAOnBlB,KAAK4C,OAEC1B,EAAI,IAAItB,EAAMM,QAEX,SAAiBmC,GAEtB,IAAIC,EAAKtC,KAAKD,OAAOwC,OAAOC,SAG5BtB,EAAEuB,IAAKH,EAAI,GAAKA,EAAI,GAAKA,EAAI,IAC7BpB,EAAEwB,eAAgBL,GAElBR,EAAUc,IAAKzB,KAQnBlB,KAAK6C,IAAM,SAAWC,EAAQC,EAAQC,EAAaC,GAEjD,GAAKzB,EAAMzB,kBAAkBH,EAAMsD,kBAAoB,CAGrD,IAEIC,EAFW3B,EAAMzB,OAAOqD,SACNC,QAAQC,IAAK9B,EAAMvB,QACbsD,SAG5BJ,GAAkBzC,KAAK8C,IAAOhC,EAAMzB,OAAO0D,IAAM,EAAM/C,KAAKC,GAAK,KAGjEa,EAAMY,QAAS,EAAIU,EAASK,EAAiBF,GAC7CzB,EAAMoB,MAAO,EAAIG,EAASI,EAAiBF,QAEjCzB,EAAMzB,kBAAkBH,EAAM8D,oBAGxClC,EAAMY,QAASU,GAAWtB,EAAMzB,OAAO4D,MAAQnC,EAAMzB,OAAO6D,MAASZ,GACrExB,EAAMoB,MAAOG,GAAWvB,EAAMzB,OAAO8D,IAAMrC,EAAMzB,OAAO+D,QAAWb,IAKnEc,QAAQC,KAAM,iFAMlBhE,KAAKiE,QAAU,SAAWC,GAEnB1C,EAAMzB,kBAAkBH,EAAMsD,kBAEjCtB,GAASsC,EAEC1C,EAAMzB,kBAAkBH,EAAM8D,oBAExClC,EAAMzB,OAAOoE,KAAOzD,KAAK0D,IAAKpE,KAAKM,QAASI,KAAK2D,IAAKrE,KAAKO,QAASP,KAAKD,OAAOoE,KAAOD,IACvF1C,EAAMzB,OAAOuE,yBACbxC,GAAc,GAIdiC,QAAQC,KAAM,wFAMlBhE,KAAKuE,SAAW,SAAWL,GAEpB1C,EAAMzB,kBAAkBH,EAAMsD,kBAEjCtB,GAASsC,EAEC1C,EAAMzB,kBAAkBH,EAAM8D,oBAExClC,EAAMzB,OAAOoE,KAAOzD,KAAK0D,IAAKpE,KAAKM,QAASI,KAAK2D,IAAKrE,KAAKO,QAASP,KAAKD,OAAOoE,KAAOD,IACvF1C,EAAMzB,OAAOuE,yBACbxC,GAAc,GAIdiC,QAAQC,KAAM,wFAMlBhE,KAAKwE,QAECrD,EAAS,IAAIvB,EAAMM,QAGnBkB,GAAO,IAAIxB,EAAM6E,YAAaC,mBAAoB3E,EAAO4E,GAAI,IAAI/E,EAAMM,QAAS,EAAG,EAAG,IACtFmB,EAAcD,EAAKiC,QAAQuB,UAE3BtD,EAAe,IAAI1B,EAAMM,QACzBqB,EAAiB,IAAI3B,EAAM6E,WAExB,WAEL,IAAIrB,EAAWpD,KAAKD,OAAOqD,SAE3BjC,EAAO0D,KAAMzB,GAAWE,IAAKtD,KAAKC,QAGlCkB,EAAO2D,gBAAiB1D,GAIxBJ,EAAQN,KAAKqE,MAAO5D,EAAO6D,EAAG7D,EAAO8D,GAIrChE,EAAMP,KAAKqE,MAAOrE,KAAKwE,KAAM/D,EAAO6D,EAAI7D,EAAO6D,EAAI7D,EAAO8D,EAAI9D,EAAO8D,GAAK9D,EAAOgE,GAEjFnE,GAASW,EACTV,GAAOS,EAGPV,EAAQN,KAAK0D,IAAKpE,KAAKY,gBAAiBF,KAAK2D,IAAKrE,KAAKa,gBAAiBG,IAGxEC,EAAMP,KAAK0D,IAAKpE,KAAKQ,cAAeE,KAAK2D,IAAKrE,KAAKS,cAAeQ,IAGlEA,EAAMP,KAAK0D,IAAK3C,EAAKf,KAAK2D,IAAK3D,KAAKC,GAAKc,EAAKR,IAE9C,IAAImE,EAASjE,EAAOoC,SAAW3B,EAsC/B,OAnCAwD,EAAS1E,KAAK0D,IAAKpE,KAAKG,YAAaO,KAAK2D,IAAKrE,KAAKI,YAAagF,IAGjEpF,KAAKC,OAAO0C,IAAKd,GAEjBV,EAAO6D,EAAII,EAAS1E,KAAK2E,IAAKpE,GAAQP,KAAK2E,IAAKrE,GAChDG,EAAOgE,EAAIC,EAAS1E,KAAK4E,IAAKrE,GAC9BE,EAAO8D,EAAIG,EAAS1E,KAAK2E,IAAKpE,GAAQP,KAAK4E,IAAKtE,GAGhDG,EAAO2D,gBAAiBzD,GAExB+B,EAASyB,KAAM7E,KAAKC,QAAS0C,IAAKxB,GAElCnB,KAAKD,OAAOwF,OAAQvF,KAAKC,SAEG,IAAvBD,KAAKc,eAERa,GAAgB,EAAI3B,KAAKe,cACzBW,GAAc,EAAI1B,KAAKe,eAKvBW,EADAC,EAAa,EAKfC,EAAQ,EACRC,EAAUY,IAAK,EAAG,EAAG,OAMhBX,GACHR,EAAakE,kBAAmBxF,KAAKD,OAAOqD,UAAa3B,GACzD,GAAM,EAAIF,EAAekE,IAAKzF,KAAKD,OAAO2F,aAAiBjE,KAE3DH,EAAauD,KAAM7E,KAAKD,OAAOqD,UAC/B7B,EAAesD,KAAM7E,KAAKD,OAAO2F,YACjC5D,GAAc,MAuBtB,SAAS6D,EAAgB5F,EAAQ6F,GAE/B,IAAIC,EAAa,IAAI/F,EAAiBC,GAEtCC,KAAK4F,gBAA8BE,IAAfF,EAA6BA,EAAaG,SAI9DC,OAAOC,eAAgBjG,KAAM,aAAc,CAEzCkG,IAAK,WAEH,OAAOL,KAMX7F,KAAK+B,cAAgB,WAEnB,OAAO8D,EAAW9D,iBAIpB/B,KAAKgC,kBAAoB,WAEvB,OAAO6D,EAAW7D,qBAKpBhC,KAAKmG,SAAU,EAGfnG,KAAKoG,OAASpG,KAAKC,OAKnBD,KAAKqG,YAAa,EAClBrG,KAAKsG,UAAY,EAGjBtG,KAAKuG,cAAe,EACpBvG,KAAKwG,YAAc,EAGnBxG,KAAKyG,WAAY,EACjBzG,KAAK0G,YAAc,EAInB1G,KAAK2G,YAAa,EAClB3G,KAAK4G,gBAAkB,EAGvB5G,KAAK6G,YAAa,EAGlB7G,KAAK8G,KAAO,CAAEC,KAAM,GAAIC,GAAI,GAAIC,MAAO,GAAIC,OAAQ,IAGnDlH,KAAKmH,aAAe,CAAEC,MAAOxH,EAAMC,MAAMkH,KAAMM,KAAMzH,EAAMC,MAAMyH,OAAQC,IAAK3H,EAAMC,MAAMoH,OAK1F,IAAIzF,EAAQxB,KAERwH,EAAc,IAAI5H,EAAM6H,QACxBC,EAAY,IAAI9H,EAAM6H,QACtBE,EAAc,IAAI/H,EAAM6H,QAExBG,EAAW,IAAIhI,EAAM6H,QACrBI,EAAS,IAAIjI,EAAM6H,QACnBK,EAAW,IAAIlI,EAAM6H,QAErBM,EAAa,IAAInI,EAAM6H,QACvBO,EAAW,IAAIpI,EAAM6H,QACrBQ,EAAa,IAAIrI,EAAM6H,QAEvBS,EAAQ,CAAEC,MAAS,EAAGC,OAAS,EAAGC,MAAQ,EAAGd,IAAM,EAAGe,aAAe,EAAGC,YAAc,EAAGC,UAAY,GAErGC,EAAQP,EAAMC,KAIlBnI,KAAK0I,QAAU1I,KAAKC,OAAOoD,QAC3BrD,KAAK2I,UAAY3I,KAAKD,OAAOqD,SAASC,QACtCrD,KAAK4I,MAAQ5I,KAAKD,OAAOoE,KAIzB,IAAI0E,EAAc,CAAEC,KAAM,UACtBC,EAAa,CAAED,KAAM,SACrBE,EAAW,CAAEF,KAAM,OAIvB,SAASjG,EAAKC,EAAQC,GAEpB,IAAIkG,EAAUzH,EAAMoE,aAAeG,SAAWvE,EAAMoE,WAAWsD,KAAO1H,EAAMoE,WAE5EC,EAAWhD,IAAKC,EAAQC,EAAQkG,EAAQE,YAAaF,EAAQG,cAyC/D,SAASC,IAEP,OAAO3I,KAAK4I,IAAK,IAAM9H,EAAM8E,WAI/B,SAASiD,EAAaC,GAEpB,IAAuB,IAAlBhI,EAAM2E,QAAX,CAIA,GAFAqD,EAAMC,iBAEDD,EAAME,SAAWlI,EAAM2F,aAAaC,MAAQ,CAE/C,IAA4B,IAAvB5F,EAAM+E,aAAyB,OAEpCkC,EAAQP,EAAME,OAEdZ,EAAY/E,IAAK+G,EAAMG,QAASH,EAAMI,cAEjC,GAAKJ,EAAME,SAAWlI,EAAM2F,aAAaE,KAAO,CAErD,IAA0B,IAArB7F,EAAM6E,WAAuB,OAElCoC,EAAQP,EAAMG,MAEdN,EAAWtF,IAAK+G,EAAMG,QAASH,EAAMI,cAEhC,GAAKJ,EAAME,SAAWlI,EAAM2F,aAAaI,IAAM,CAEpD,IAAyB,IAApB/F,EAAMiF,UAAsB,OAEjCgC,EAAQP,EAAMX,IAEdK,EAASnF,IAAK+G,EAAMG,QAASH,EAAMI,SAIhCnB,IAAUP,EAAMC,OAEnBpC,SAAS8D,iBAAkB,YAAaC,GAAa,GACrD/D,SAAS8D,iBAAkB,UAAWE,GAAW,GACjDvI,EAAMwI,cAAejB,KAMzB,SAASe,EAAaN,GAEpB,IAAuB,IAAlBhI,EAAM2E,QAAX,CAEAqD,EAAMC,iBAEN,IAAIR,EAAUzH,EAAMoE,aAAeG,SAAWvE,EAAMoE,WAAWsD,KAAO1H,EAAMoE,WAE5E,GAAK6C,IAAUP,EAAME,OAAS,CAE5B,IAA4B,IAAvB5G,EAAM+E,aAAyB,OAEpCmB,EAAUjF,IAAK+G,EAAMG,QAASH,EAAMI,SACpCjC,EAAYsC,WAAYvC,EAAWF,GAGnC3B,EAAW5D,WAAY,EAAIvB,KAAKC,GAAKgH,EAAY3C,EAAIiE,EAAQE,YAAc3H,EAAMgF,aAGjFX,EAAW1D,SAAU,EAAIzB,KAAKC,GAAKgH,EAAYxC,EAAI8D,EAAQG,aAAe5H,EAAMgF,aAEhFgB,EAAY3C,KAAM6C,QAEb,GAAKe,IAAUP,EAAMG,MAAQ,CAElC,IAA0B,IAArB7G,EAAM6E,WAAuB,OAElC2B,EAASvF,IAAK+G,EAAMG,QAASH,EAAMI,SACnC3B,EAAWgC,WAAYjC,EAAUD,GAEb,EAAfE,EAAW9C,EAEdU,EAAW5B,QAASoF,KAEVpB,EAAW9C,EAAI,GAEzBU,EAAWtB,SAAU8E,KAIvBtB,EAAWlD,KAAMmD,QAEZ,GAAKS,IAAUP,EAAMX,IAAM,CAEhC,IAAyB,IAApB/F,EAAMiF,UAAsB,OAEjCoB,EAAOpF,IAAK+G,EAAMG,QAASH,EAAMI,SACjC9B,EAASmC,WAAYpC,EAAQD,GAE7B/E,EAAKiF,EAAS9C,EAAG8C,EAAS3C,GAE1ByC,EAAS/C,KAAMgD,GAIZY,IAAUP,EAAMC,MAAO3G,EAAMgD,UAIpC,SAASuF,KAEgB,IAAlBvI,EAAM2E,UAEXJ,SAASmE,oBAAqB,YAAaJ,GAAa,GACxD/D,SAASmE,oBAAqB,UAAWH,GAAW,GACpDvI,EAAMwI,cAAehB,GACrBP,EAAQP,EAAMC,MAIhB,SAASgC,EAAcX,GAErB,IAAuB,IAAlBhI,EAAM2E,UAA0C,IAArB3E,EAAM6E,YAAwBoC,IAAUP,EAAMC,KAA9E,CAEAqB,EAAMC,iBACND,EAAMY,kBAEN,IAAIC,EAAQ,OAEcvE,IAArB0D,EAAMc,WAITD,EAAQb,EAAMc,gBAEaxE,IAAjB0D,EAAMe,SAIhBF,GAAUb,EAAMe,QAIL,EAARF,EAEHxE,EAAWtB,SAAU8E,KAEXgB,EAAQ,GAElBxE,EAAW5B,QAASoF,KAItB7H,EAAMgD,SACNhD,EAAMwI,cAAejB,GACrBvH,EAAMwI,cAAehB,IAIvB,SAASwB,EAAWhB,GAElB,IAAuB,IAAlBhI,EAAM2E,UAA0C,IAArB3E,EAAMqF,aAA4C,IAApBrF,EAAMiF,UAEpE,OAAS+C,EAAMiB,SAEb,KAAKjJ,EAAMsF,KAAKE,GACdnE,EAAK,EAAGrB,EAAMkF,aACdlF,EAAMgD,SACN,MAEF,KAAKhD,EAAMsF,KAAKI,OACdrE,EAAK,GAAKrB,EAAMkF,aAChBlF,EAAMgD,SACN,MAEF,KAAKhD,EAAMsF,KAAKC,KACdlE,EAAKrB,EAAMkF,YAAa,GACxBlF,EAAMgD,SACN,MAEF,KAAKhD,EAAMsF,KAAKG,MACdpE,GAAOrB,EAAMkF,YAAa,GAC1BlF,EAAMgD,UAOZ,SAASkG,EAAYlB,GAEnB,IAAuB,IAAlBhI,EAAM2E,QAAX,CAEA,OAASqD,EAAMmB,QAAQpH,QAErB,KAAK,EAEH,IAA4B,IAAvB/B,EAAM+E,aAAyB,OAEpCkC,EAAQP,EAAMI,aAEdd,EAAY/E,IAAK+G,EAAMmB,QAAS,GAAIC,MAAOpB,EAAMmB,QAAS,GAAIE,OAC9D,MAEF,KAAK,EAEH,IAA0B,IAArBrJ,EAAM6E,WAAuB,OAElCoC,EAAQP,EAAMK,YAEd,IAAIuC,EAAKtB,EAAMmB,QAAS,GAAIC,MAAQpB,EAAMmB,QAAS,GAAIC,MACnDG,EAAKvB,EAAMmB,QAAS,GAAIE,MAAQrB,EAAMmB,QAAS,GAAIE,MACnDxI,EAAW3B,KAAKwE,KAAM4F,EAAKA,EAAKC,EAAKA,GACzChD,EAAWtF,IAAK,EAAGJ,GACnB,MAEF,KAAK,EAEH,IAAyB,IAApBb,EAAMiF,UAAsB,OAEjCgC,EAAQP,EAAMM,UAEdZ,EAASnF,IAAK+G,EAAMmB,QAAS,GAAIC,MAAOpB,EAAMmB,QAAS,GAAIE,OAC3D,MAEF,QAEEpC,EAAQP,EAAMC,KAIbM,IAAUP,EAAMC,MAAO3G,EAAMwI,cAAejB,IAInD,SAASiC,EAAWxB,GAElB,IAAuB,IAAlBhI,EAAM2E,QAAX,CAEAqD,EAAMC,iBACND,EAAMY,kBAEN,IAAInB,EAAUzH,EAAMoE,aAAeG,SAAWvE,EAAMoE,WAAWsD,KAAO1H,EAAMoE,WAE5E,OAAS4D,EAAMmB,QAAQpH,QAErB,KAAK,EAEH,IAA4B,IAAvB/B,EAAM+E,aAAyB,OACpC,GAAKkC,IAAUP,EAAMI,aAAe,OAEpCZ,EAAUjF,IAAK+G,EAAMmB,QAAS,GAAIC,MAAOpB,EAAMmB,QAAS,GAAIE,OAC5DlD,EAAYsC,WAAYvC,EAAWF,GAGnC3B,EAAW5D,WAAY,EAAIvB,KAAKC,GAAKgH,EAAY3C,EAAIiE,EAAQE,YAAc3H,EAAMgF,aAEjFX,EAAW1D,SAAU,EAAIzB,KAAKC,GAAKgH,EAAYxC,EAAI8D,EAAQG,aAAe5H,EAAMgF,aAEhFgB,EAAY3C,KAAM6C,GAElBlG,EAAMgD,SACN,MAEF,KAAK,EAEH,IAA0B,IAArBhD,EAAM6E,WAAuB,OAClC,GAAKoC,IAAUP,EAAMK,YAAc,OAEnC,IAAIuC,EAAKtB,EAAMmB,QAAS,GAAIC,MAAQpB,EAAMmB,QAAS,GAAIC,MACnDG,EAAKvB,EAAMmB,QAAS,GAAIE,MAAQrB,EAAMmB,QAAS,GAAIE,MACnDxI,EAAW3B,KAAKwE,KAAM4F,EAAKA,EAAKC,EAAKA,GAEzC/C,EAASvF,IAAK,EAAGJ,GACjB4F,EAAWgC,WAAYjC,EAAUD,GAEb,EAAfE,EAAW9C,EAEdU,EAAWtB,SAAU8E,KAEXpB,EAAW9C,EAAI,GAEzBU,EAAW5B,QAASoF,KAItBtB,EAAWlD,KAAMmD,GAEjBxG,EAAMgD,SACN,MAEF,KAAK,EAEH,IAAyB,IAApBhD,EAAMiF,UAAsB,OACjC,GAAKgC,IAAUP,EAAMM,UAAY,OAEjCX,EAAOpF,IAAK+G,EAAMmB,QAAS,GAAIC,MAAOpB,EAAMmB,QAAS,GAAIE,OACzD/C,EAASmC,WAAYpC,EAAQD,GAE7B/E,EAAKiF,EAAS9C,EAAG8C,EAAS3C,GAE1ByC,EAAS/C,KAAMgD,GAEfrG,EAAMgD,SACN,MAEF,QAEEiE,EAAQP,EAAMC,OAMpB,SAAS8C,KAEgB,IAAlBzJ,EAAM2E,UAEX3E,EAAMwI,cAAehB,GACrBP,EAAQP,EAAMC,MAIhB,SAAS+C,EAAa1B,GAEpBA,EAAMC,iBAxWRzJ,KAAKwE,OAAS,WAEPxE,KAAK2G,YAAc8B,IAAUP,EAAMC,MAEtCtC,EAAW5D,WA6BN,EAAIvB,KAAKC,GAAK,GAAK,GAAKa,EAAMoF,kBAzBR,IAAxBf,EAAWrB,UAEdxE,KAAKgK,cAAenB,IAMxB7I,KAAKmL,MAAQ,WAEX1C,EAAQP,EAAMC,KAEdnI,KAAKC,OAAO4E,KAAM7E,KAAK0I,SACvB1I,KAAKD,OAAOqD,SAASyB,KAAM7E,KAAK2I,WAChC3I,KAAKD,OAAOoE,KAAOnE,KAAK4I,MAExB5I,KAAKD,OAAOuE,yBACZtE,KAAKgK,cAAenB,GAEpB7I,KAAKwE,UAiVPxE,KAAKoL,QAAU,WAEbpL,KAAK4F,WAAWsE,oBAAqB,cAAegB,GAAa,GACjElL,KAAK4F,WAAWsE,oBAAqB,YAAaX,GAAa,GAC/DvJ,KAAK4F,WAAWsE,oBAAqB,aAAcC,GAAc,GACjEnK,KAAK4F,WAAWsE,oBAAqB,sBAAuBC,GAAc,GAE1EnK,KAAK4F,WAAWsE,oBAAqB,aAAcQ,GAAY,GAC/D1K,KAAK4F,WAAWsE,oBAAqB,WAAYe,GAAU,GAC3DjL,KAAK4F,WAAWsE,oBAAqB,YAAac,GAAW,GAE7DjF,SAASmE,oBAAqB,YAAaJ,GAAa,GACxD/D,SAASmE,oBAAqB,UAAWH,GAAW,GAEpDsB,OAAOnB,oBAAqB,UAAWM,GAAW,IAIpDxK,KAAK4F,WAAWiE,iBAAkB,cAAeqB,GAAa,GAE9DlL,KAAK4F,WAAWiE,iBAAkB,YAAaN,GAAa,GAC5DvJ,KAAK4F,WAAWiE,iBAAkB,aAAcM,GAAc,GAC9DnK,KAAK4F,WAAWiE,iBAAkB,sBAAuBM,GAAc,GAEvEnK,KAAK4F,WAAWiE,iBAAkB,aAAca,GAAY,GAC5D1K,KAAK4F,WAAWiE,iBAAkB,WAAYoB,GAAU,GACxDjL,KAAK4F,WAAWiE,iBAAkB,YAAamB,GAAW,GAE1DK,OAAOxB,iBAAkB,UAAWW,GAAW,GAG/CxK,KAAKwE,SAoTP,OA3lCK3E,IACHA,EAAQ,CAAEkH,KAAM,EAAGO,OAAQ,EAAGL,MAAO,KA0yBvCtB,EAAc2F,UAAYtF,OAAOuF,OAAQ3L,EAAM4L,gBAAgBF,YACvCG,YAAc9F,EAEtCK,OAAO0F,iBAAkB/F,EAAc2F,UAAW,CAEhDvL,OAAQ,CAENmG,IAAK,WAEH,OAAOlG,KAAK6F,WAAW9F,SAM3BE,OAAQ,CAENiG,IAAK,WAEH,OAAOlG,KAAK6F,WAAW5F,QAIzBwC,IAAK,SAAWkJ,GAEd5H,QAAQC,KAAM,2EACdhE,KAAK6F,WAAW5F,OAAO4E,KAAM8G,KAMjCxL,YAAc,CAEZ+F,IAAK,WAEH,OAAOlG,KAAK6F,WAAW1F,aAIzBsC,IAAK,SAAWkJ,GAEd3L,KAAK6F,WAAW1F,YAAcwL,IAMlCvL,YAAc,CAEZ8F,IAAK,WAEH,OAAOlG,KAAK6F,WAAWzF,aAIzBqC,IAAK,SAAWkJ,GAEd3L,KAAK6F,WAAWzF,YAAcuL,IAMlCrL,QAAU,CAER4F,IAAK,WAEH,OAAOlG,KAAK6F,WAAWvF,SAIzBmC,IAAK,SAAWkJ,GAEd3L,KAAK6F,WAAWvF,QAAUqL,IAM9BpL,QAAU,CAER2F,IAAK,WAEH,OAAOlG,KAAK6F,WAAWtF,SAIzBkC,IAAK,SAAWkJ,GAEd3L,KAAK6F,WAAWtF,QAAUoL,IAM9BnL,cAAgB,CAEd0F,IAAK,WAEH,OAAOlG,KAAK6F,WAAWrF,eAIzBiC,IAAK,SAAWkJ,GAEd3L,KAAK6F,WAAWrF,cAAgBmL,IAMpClL,cAAgB,CAEdyF,IAAK,WAEH,OAAOlG,KAAK6F,WAAWpF,eAIzBgC,IAAK,SAAWkJ,GAEd3L,KAAK6F,WAAWpF,cAAgBkL,IAMpC/K,gBAAkB,CAEhBsF,IAAK,WAEH,OAAOlG,KAAK6F,WAAWjF,iBAIzB6B,IAAK,SAAWkJ,GAEd3L,KAAK6F,WAAWjF,gBAAkB+K,IAMtC9K,gBAAkB,CAEhBqF,IAAK,WAEH,OAAOlG,KAAK6F,WAAWhF,iBAIzB4B,IAAK,SAAWkJ,GAEd3L,KAAK6F,WAAWhF,gBAAkB8K,IAMtC7K,cAAgB,CAEdoF,IAAK,WAEH,OAAOlG,KAAK6F,WAAW/E,eAIzB2B,IAAK,SAAWkJ,GAEd3L,KAAK6F,WAAW/E,cAAgB6K,IAMpC5K,cAAgB,CAEdmF,IAAK,WAEH,OAAOlG,KAAK6F,WAAW9E,eAIzB0B,IAAK,SAAWkJ,GAEd3L,KAAK6F,WAAW9E,cAAgB4K,IAQpCC,OAAQ,CAEN1F,IAAK,WAGH,OADAnC,QAAQC,KAAM,+EACLhE,KAAKqG,YAIhB5D,IAAK,SAAWkJ,GAEd5H,QAAQC,KAAM,8EACdhE,KAAKqG,YAAesF,IAMxBE,SAAU,CAER3F,IAAK,WAGH,OADAnC,QAAQC,KAAM,mFACLhE,KAAKuG,cAIhB9D,IAAK,SAAWkJ,GAEd5H,QAAQC,KAAM,kFACdhE,KAAKuG,cAAiBoF,IAM1BG,MAAO,CAEL5F,IAAK,WAGH,OADAnC,QAAQC,KAAM,6EACLhE,KAAKyG,WAIhBhE,IAAK,SAAWkJ,GAEd5H,QAAQC,KAAM,4EACdhE,KAAKyG,WAAckF,IAMvBI,OAAQ,CAEN7F,IAAK,WAGH,OADAnC,QAAQC,KAAM,+EACLhE,KAAK6G,YAIhBpE,IAAK,SAAWkJ,GAEd5H,QAAQC,KAAM,8EACdhE,KAAK6G,YAAe8E,IAMxBK,aAAe,CAEb9F,IAAK,WAGH,OADAnC,QAAQC,KAAM,wFACLhE,KAAK6F,WAAW/E,eAI3B2B,IAAK,SAAWkJ,GAEd5H,QAAQC,KAAM,uFACdhE,KAAK6F,WAAW/E,eAAkB6K,IAMtCM,qBAAuB,CAErB/F,IAAK,WAGH,OADAnC,QAAQC,KAAM,4FACPhE,KAAK6F,WAAW9E,eAIzB0B,IAAK,SAAWkJ,GAEd5H,QAAQC,KAAM,4FACdhE,KAAK6F,WAAW9E,cAAgB4K,MAQ/BhG,+GC1lCMuG,EAAA,CACbC,OAAO,EACPC,gBAAgB,EAChBC,UAAU,EACVC,YAAY,EACZC,YAAY,EACZC,eAAe,EACfC,aAAa,EACbC,cAAe,EACfC,IAAK,EACLC,OAAQC,IAAMC,OAAOC,UAAUC,MAC/BC,SAAU,IACVC,MAAO,CACLC,KAAM,8BACNvL,MAAO,IAETwL,QAAS,CACPD,KAAM,qBACNE,WAAY,CACV,CAACC,KAAM,KAAMC,MAAO,kBACpB,CAACD,KAAM,MAAOC,MAAO,aAGzBC,KAAM,CACJC,cAAc,EACdC,WAAW,EACXC,aAAa,EACbC,SAAU,CACRC,MAAO,SACPC,SAAU,WAGdC,IAAK,CACHF,MAAO,SACPG,KAAM,MAERC,OAAQ,CACNxK,IAAK,GACLuK,KAAM,IACNE,IAAK,IACLC,OAAQ,KAAK,KACbC,KAAM,EACNC,KAAM,KACNC,KAAM,KAERC,SAAU,CACR5H,YAAY,EACZC,iBAAkB,GAClBJ,YAAa,GACbF,UAAW,GACXnG,YAAa,IACbC,YAAa,IACbI,cAAeE,KAAKC,GAAK,EACzBF,cAAeC,KAAKC,GAAK,EACzBC,iBAAkBP,IAClBQ,gBAAiBR,IACjBS,eAAe,EACfC,cAAe,GACfsF,YAAY,EACZpG,OAAQ,CACN+E,EAAG,EACHG,EAAG,EACHF,EAAG,IAGPuJ,aAAc,CACZrI,SAAS,EACT0H,MAAO,SAETY,iBAAkB,CAChBtI,SAAS,EACT0H,MAAO,SACPa,UAAW,GACX1J,EAAG,GACHG,GAAI,GACJF,EAAG,KAEL0J,OAAQ,CACNxI,SAAS,EACTyI,eAAe,EACfC,KAAM,EACNC,SAAU,KACVC,UAAW,KACXf,KAAM,IACNE,IAAK,IACLrK,IAAK,GACLF,MAAO,IACPG,OAAQ,GACRF,MAAO,KAEToL,WAAY,CACV7I,SAAS,EACT0H,MAAO,SACPa,UAAW,IACXrM,SAAU,IACV2C,GAAI,GACJG,EAAG,GACHF,EAAG,KAELgK,UAAW,CACT9I,SAAS,EACT0H,MAAO,SACPqB,YAAa,SACbR,UAAW,IACX1J,EAAG,EACHG,EAAG,EACHF,EAAG,ICxGQkK,EAAA,CACbC,SAAU/D,OAAOgE,yBACjBC,MAAQ,WACN,IACE,IAAIF,EAASrJ,SAASwJ,cAAc,UAEpC,SAAUlE,OAAOmE,wBAA0BJ,EAAOK,WAAW,WAAYL,EAAOK,WAAW,uBAC3F,MAAMC,GACN,OAAO,GANH,GAURC,UAAWtE,OAAOuE,OAClBC,QAASxE,OAAOyE,MAAQzE,OAAO0E,YAAc1E,OAAO2E,UAAY3E,OAAO4E,KAEvEC,qBAAsB,WACpB,IAAIjH,EAAUlD,SAASwJ,cAAc,OAsBrC,OArBAtG,EAAQkH,GAAK,sBACblH,EAAQmH,MAAMC,WAAa,YAC3BpH,EAAQmH,MAAME,SAAW,OACzBrH,EAAQmH,MAAMG,WAAa,SAC3BtH,EAAQmH,MAAMI,UAAY,SAC1BvH,EAAQmH,MAAMK,WAAa,OAC3BxH,EAAQmH,MAAMvC,MAAQ,OACtB5E,EAAQmH,MAAMM,QAAU,QACxBzH,EAAQmH,MAAMO,MAAQ,QACtB1H,EAAQmH,MAAMQ,OAAS,aAEnB5Q,KAAKsP,QACPrG,EAAQ4H,UAAYxF,OAAOmE,sBAAwB,CACjD,4JACA,0FACAsB,KAAK,MAAQ,CACb,qJACA,0FACAA,KAAK,OAGF7H,GAGT8H,mBAAoB,SAASC,GAC3B,IAAIC,EAAQd,EAAIlH,EAIhBgI,OAA+BnL,KAF/BkL,EAAaA,GAAc,IAEPC,OAAuBD,EAAWC,OAASlL,SAASmD,KACxEiH,OAAuBrK,IAAlBkL,EAAWb,GAAmBa,EAAWb,GAAK,SAEnDlH,EAAUjJ,KAAKkQ,wBACPC,GAAKA,EAEbc,EAAOC,YAAYjI,sLCpDFkI,aACnB,SAAAA,EAAYC,EAAOC,GAAW,IAAAC,EAAAtR,kGAAAuR,CAAAvR,KAAAmR,GAE5BnR,KAAKoR,MAAQA,EACbpR,KAAKqR,UAAYA,EAGjBrR,KAAKwR,cAAgB,IAAI5R,gBAAoB,CAAC6R,WAAW,EAAKC,OAAM,IAIpE1R,KAAKwR,cAAcG,cAAe,EAAU,GAC5C3R,KAAKwR,cAAcI,cAAcvG,OAAOwG,kBAExCR,EAAUH,YAAYlR,KAAKwR,cAAc5L,YAGzC5F,KAAKwR,cAAcM,UAAU3L,SAAU,EAIvC4L,EAAOrF,cAAgB1M,KAAKwR,cAAcQ,mBAG1ChS,KAAKiS,aAGLlM,SAAS8D,iBAAiB,mBAAoB,kBAAMyH,EAAKW,eAAc,GACvE5G,OAAOxB,iBAAiB,SAAU,kBAAMyH,EAAKW,eAAc,+DAI3DjS,KAAKwR,cAAcU,QAAQlS,KAAKqR,UAAUc,YAAanS,KAAKqR,UAAUe,6CAGjEhB,EAAOnD,GAEZjO,KAAKwR,cAAca,OAAOjB,EAAOnD,kNCrChBqE,aACnB,SAAAA,EAAYC,GAAU,IAAAjB,EAAAtR,kGAAAwS,CAAAxS,KAAAsS,GACpB,IAAM3B,EAAQ4B,EAAS3M,WAAW+K,MAC5B8B,EAASF,EAAS3M,WAAW6M,OAGnCzS,KAAK0S,YAAc,IAAI9S,oBAAwBmS,EAAO9D,OAAOxK,IAAKkN,EAAQ8B,EAAQV,EAAO9D,OAAOD,KAAM+D,EAAO9D,OAAOC,KACpHlO,KAAK0S,YAAYtP,SAASX,IAAIsP,EAAO9D,OAAOG,KAAM2D,EAAO9D,OAAOI,KAAM0D,EAAO9D,OAAOK,MAGpFtO,KAAKiS,WAAWM,GAGhBlH,OAAOxB,iBAAiB,SAAU,kBAAMyH,EAAKW,WAAWM,KAAW,6DAG1DA,GAETvS,KAAK0S,YAAYvE,OAASoE,EAAS3M,WAAW+K,MAAQ4B,EAAS3M,WAAW6M,OAG1EzS,KAAK0S,YAAYpO,wOCrBAqO,aACnB,SAAAA,EAAYvB,gGAAOwB,CAAA5S,KAAA2S,GACjB3S,KAAKoR,MAAQA,EAEbpR,KAAK6S,6DAKL7S,KAAKwO,aAAe,IAAI5O,eAAmBmS,EAAOvD,aAAaX,OAC/D7N,KAAKwO,aAAasE,QAAUf,EAAOvD,aAAarI,QAGhDnG,KAAKgP,WAAa,IAAIpP,aAAiBmS,EAAO/C,WAAWnB,MAAOkE,EAAO/C,WAAWN,UAAWqD,EAAO/C,WAAW3M,UAC/GrC,KAAKgP,WAAW5L,SAASX,IAAIsP,EAAO/C,WAAWhK,EAAG+M,EAAO/C,WAAW7J,EAAG4M,EAAO/C,WAAW/J,GACzFjF,KAAKgP,WAAW8D,QAAUf,EAAO/C,WAAW7I,QAG5CnG,KAAKyO,iBAAmB,IAAI7O,mBAAuBmS,EAAOtD,iBAAiBZ,MAAOkE,EAAOtD,iBAAiBC,WAC1G1O,KAAKyO,iBAAiBrL,SAASX,IAAIsP,EAAOtD,iBAAiBzJ,EAAG+M,EAAOtD,iBAAiBtJ,EAAG4M,EAAOtD,iBAAiBxJ,GACjHjF,KAAKyO,iBAAiBqE,QAAUf,EAAOtD,iBAAiBtI,QAGxDnG,KAAKyO,iBAAiBsE,WAAahB,EAAOpD,OAAOxI,QACjDnG,KAAKyO,iBAAiBE,OAAOE,KAAOkD,EAAOpD,OAAOE,KAClD7O,KAAKyO,iBAAiBE,OAAOV,OAAOD,KAAO+D,EAAOpD,OAAOX,KACzDhO,KAAKyO,iBAAiBE,OAAOV,OAAOC,IAAM6D,EAAOpD,OAAOT,IACxDlO,KAAKyO,iBAAiBE,OAAOV,OAAOrK,KAAOmO,EAAOpD,OAAO/K,KACzD5D,KAAKyO,iBAAiBE,OAAOV,OAAOtK,MAAQoO,EAAOpD,OAAOhL,MAC1D3D,KAAKyO,iBAAiBE,OAAOV,OAAOpK,IAAMkO,EAAOpD,OAAO9K,IACxD7D,KAAKyO,iBAAiBE,OAAOV,OAAOnK,OAASiO,EAAOpD,OAAO7K,OAC3D9D,KAAKyO,iBAAiBE,OAAOqE,QAAQrC,MAAQoB,EAAOpD,OAAOG,SAC3D9O,KAAKyO,iBAAiBE,OAAOqE,QAAQP,OAASV,EAAOpD,OAAOI,UAG5D/O,KAAKiT,uBAAyB,IAAIrT,eAAmBI,KAAKyO,iBAAiBE,OAAOV,QAClFjO,KAAKiT,uBAAuBH,QAAUf,EAAOpD,OAAOC,cAGpD5O,KAAKiP,UAAY,IAAIrP,kBAAsBmS,EAAO9C,UAAUpB,MAAOkE,EAAO9C,UAAUC,YAAa6C,EAAO9C,UAAUP,WAClH1O,KAAKiP,UAAU7L,SAASX,IAAIsP,EAAO9C,UAAUjK,EAAG+M,EAAO9C,UAAU9J,EAAG4M,EAAO9C,UAAUhK,GACrFjF,KAAKiP,UAAU6D,QAAUf,EAAO9C,UAAU9I,sCAGtC+M,GACJ,OAAOA,GACL,IAAK,UACHlT,KAAKoR,MAAMzO,IAAI3C,KAAKwO,cACpB,MAEF,IAAK,cACHxO,KAAKoR,MAAMzO,IAAI3C,KAAKyO,kBACpBzO,KAAKoR,MAAMzO,IAAI3C,KAAKiT,wBACpB,MAEF,IAAK,QACHjT,KAAKoR,MAAMzO,IAAI3C,KAAKgP,YACpB,MAEF,IAAK,OACHhP,KAAKoR,MAAMzO,IAAI3C,KAAKiP,2OC3DPkE,aACnB,SAAAA,EAAYlF,EAAQoD,gGAAW+B,CAAApT,KAAAmT,GAE7B,IAAME,EAAgB,IAAI1N,IAAc/F,GACxCI,KAAKsT,cAAgB,IAAID,EAAcpF,EAAQoD,GAE/CrR,KAAK6S,6DAIL7S,KAAKsT,cAAcrT,OAAOwC,IAAIsP,EAAOxD,SAAStO,OAAO+E,EAAG+M,EAAOxD,SAAStO,OAAOkF,EAAG4M,EAAOxD,SAAStO,OAAOgF,GACzGjF,KAAKsT,cAAc3M,YAAa,EAChC3G,KAAKsT,cAAc1M,gBAAkBmL,EAAOxD,SAAS3H,gBACrD5G,KAAKsT,cAAc9M,YAAcuL,EAAOxD,SAAS/H,YACjDxG,KAAKsT,cAAchN,UAAYyL,EAAOxD,SAASjI,UAC/CtG,KAAKsT,cAAcnT,YAAc4R,EAAOxD,SAASpO,YACjDH,KAAKsT,cAAclT,YAAc2R,EAAOxD,SAASnO,YACjDJ,KAAKsT,cAAc9S,cAAgBuR,EAAOxD,SAAS/N,cACnDR,KAAKsT,cAAc7S,cAAgBsR,EAAOxD,SAAS9N,cACnDT,KAAKsT,cAAcxS,cAAgBiR,EAAOxD,SAASzN,cACnDd,KAAKsT,cAAcjN,WAAa0L,EAAOxD,SAASlI,WAChDrG,KAAKsT,cAAcvS,cAAgBgR,EAAOxD,SAASxN,uDCtBlCwS,EACnB,SAAAA,EAAY1F,EAAO2F,gGAASC,CAAAzT,KAAAuT,GACJ,cAAZC,IAAkBA,EAAU,GACtCxT,KAAK0T,MAAQ,IAAI9T,oBAAwB,CACvCiO,QACA8F,KAAM/T,eAGRI,KAAK4T,SAAW,IAAIhU,uBAA2B,CAC7CiO,QACAgG,aAAa,EACbC,UAAW,EACXC,UAAW,EACXJ,KAAM/T,eAGRI,KAAKgU,MAAQ,IAAIpU,mBAAuB,CACtCiO,QACA2F,UACAK,aAAa,EACbF,KAAM/T,aACNqU,YAAY,EACZC,aAAa,IAEflU,KAAKmU,IAAM,IAAIvU,oBAAwB,IAIvCI,KAAKoU,KAAO,IAAIxU,oBAAwB,CAAC8N,WAAW,ogBChCpD2G,EAAIC,ECMaC,aACnB,SAAAA,EAAYnD,EAAOoD,gGAAUC,CAAAzU,KAAAuU,GAC3BvU,KAAKoR,MAAQA,EACbpR,KAAK0U,IAAM,KACX1U,KAAK8I,KAAO,KACZ9I,KAAK2U,KAAO,KACZ3U,KAAKgU,MAAQ,KACbhU,KAAKmU,IAAM,KACXnU,KAAKwU,SAAWA,sDAGb1L,GAAM,IAAAwI,EAAAtR,KACT,MAAY,UAAT8I,GACD9I,KAAK8I,KAAOA,EACL,SAAC6H,EAAO8B,GAAkD,IAA1CmC,EAA0C,EAAAC,UAAAtR,aAAAuC,IAAA+O,UAAA,GAAAA,UAAA,GAA1B,EAAGC,EAAuB,EAAAD,UAAAtR,aAAAuC,IAAA+O,UAAA,GAAAA,UAAA,GAAN,EACzDvD,EAAKoD,IAAM,IAAI9U,gBAAoB+Q,EAAO8B,EAAQmC,EAAeE,KAGzD,QAAThM,GACD9I,KAAK8I,KAAOA,EACL,SAAC6H,EAAO8B,GAAkD,IAA1CmC,EAA0C,EAAAC,UAAAtR,aAAAuC,IAAA+O,UAAA,GAAAA,UAAA,GAA1B,EAAGC,EAAuB,EAAAD,UAAAtR,aAAAuC,IAAA+O,UAAA,GAAAA,UAAA,GAAN,EACzDvD,EAAKoD,IAAM,IAAI9U,gBAAoB+Q,EAAO8B,EAAQmC,EAAeE,KAGzD,WAAThM,GACD9I,KAAK8I,KAAOA,EACL,SAAC1D,GAAoD,IAA5CwP,EAA4C,EAAAC,UAAAtR,aAAAuC,IAAA+O,UAAA,GAAAA,UAAA,GAA5B,GAAIC,EAAwB,EAAAD,UAAAtR,aAAAuC,IAAA+O,UAAA,GAAAA,UAAA,GAAP,GACnDvD,EAAKoD,IAAM,IAAI9U,iBAAqBwF,EAAQwP,EAAeE,KAGnD,SAAThM,GACD9I,KAAK8I,KAAOA,EACL,SAAC6H,EAAO8B,EAAOsC,GACpBzD,EAAKoD,IAAM,IAAI9U,cAAmB+Q,EAAM8B,EAAQsC,KAGxC,SAATjM,GACD9I,KAAK8I,KAAOA,EACL,SAAE1D,GACPkM,EAAKoD,IAAM,IAAI9U,mBAAwBwF,EAAQA,EAAQ,EAAG,WAH9D,gCAQIhC,EAAU4R,EAAS5H,GAAS,IAAA6H,EAAAC,EAChCnR,QAAQoR,IAAI/H,GACZ,IAAIQ,EAAW,IAAI2F,EAAS,EAAS,IAAKK,SAC1B,SAAb5T,KAAK8I,OACN8E,EAAW,IAAI2F,EAAS,EAAS,IAAKS,OAGzB,QAAbhU,KAAK8I,OACP8E,EAAW,IAAI2F,EAAS,QAAS,IAAKK,UAExB,QAAb5T,KAAK8I,OACN8E,EAAW,IAAI2F,EAAS,QAAS,IAAKK,UAExB,OAAb5T,KAAK8I,QACN8E,EAAW,IAAI2F,EAAS,EAAS,MAAMY,KAC9BA,IAAMnU,KAAKwU,SAASL,KAE/B,IAAM3G,EAAO,IAAI5N,OAAWI,KAAK0U,IAAK9G,GACxC,OAAO5N,KAAK8I,MACV,IAAK,OAAQ9I,KAAK2U,KAAOnH,EAAM,MAC/B,IAAK,MAAOxN,KAAKmU,IAAM3G,EAAM,MAC7B,IAAK,QAASxN,KAAKgU,MAAQxG,EAE3BzJ,QAAQoR,IAAI3H,IAEVyH,EAAAzH,EAAKpK,UAASX,IAAd2S,MAAAH,EAAAI,EAAqBjS,KACrB8R,EAAA1H,EAAKwH,UAASvS,IAAd2S,MAAAF,EAAAG,EAAqBL,IAElBjD,EAAOpD,OAAOxI,UACfqH,EAAK8H,eAAgB,EACrB9H,EAAKuF,YAAa,GAGpB/S,KAAKoR,MAAMzO,IAAI6K,kNDjFE+H,aACnB,SAAAA,EAAYhD,gGAAUiD,CAAAxV,KAAAuV,GACpBvV,KAAKuS,SAAWA,wDA+BhB8B,EAAG,SAASoB,QAGZpB,EAAG,OAAOqB,OACVrB,EAAG,OAAOsB,QAEVtB,EAAG,UAAUoB,sCAIbpB,EAAG,UAAUuB,MACbvB,EAAG,SAASuB,MAGZvB,EAAG,UAAUoB,QACbpB,IAAK7P,SACL6P,EAAG,UAAUuB,2CA3CbtB,EAAK,IAAIuB,aAITxB,EAAK,IAAIyB,OAAO,CACdC,QAAS,SACTC,eAAe,EACfC,OAAQ,CACNN,MAAO,CAAEO,QAAS,wBAAyBC,KAAM,GAAIC,SAAS,EAAMC,MAAO,KAC3EC,IAAK,CAAEJ,QAAS,kBAAmBK,MAAO,IAC1CC,MAAO,CAAEN,QAAS,mBAAoBC,KAAM,KAC5CM,IAAK,CAAEP,QAAS,2BAA4BE,SAAS,EAAMC,MAAO,KAClEK,OAAQ,CAAER,QAAS,qBAAsBE,SAAS,EAAMC,MAAO,KAC/DjJ,QAAS,CAAE8I,QAAS,SAAUE,SAAS,EAAMC,MAAO,MAEtDM,OAAQ,CACN,CAAET,QAAS,YAAaD,OAAQ,CAAC,MAAO,QACxC,CAAEC,QAAS,eAAgBD,OAAQ,CAAC,QAAS,UAAW,QAAS,YAEnEW,UAAW,CACT,CAAEC,KAAM,QAASC,MAAO,CAAC,UAAW,QAAS,YAE/CC,QAAS,CAACzC,2NE9BK0C,uLACHC,EAAIC,EAAY1V,GAE9B,IAAI2V,EAAMC,EAEV,OAHAF,IAAeA,EAAa,KAGrB,WACL,IAAMG,EAAU7V,GAASxB,KAEnBsX,GAAQ,IAAIC,KACdC,EAAO3C,UAERsC,GAAQG,EAAMH,EAAOD,GACtBO,aAAaL,GACbA,EAAaM,WAAW,WACtBP,EAAOG,EACPL,EAAG7B,MAAMiC,EAASG,IACjBN,KAGHC,EAAOG,EACPL,EAAG7B,MAAMiC,EAASG,2CAMtB,OAAO,SAASG,GACd,GAAGA,EAAIC,iBAAkB,CACvB,IAAMC,EAAkBF,EAAIG,OAASH,EAAII,MAAQ,IAEjDhU,QAAQoR,IAAIzU,KAAKsX,MAAMH,EAAiB,GAAK,qDAMjD,OAAO,SAASF,GACd5T,QAAQkU,MAAMN,8CAIO9J,GACvB,OAAO,SAAClC,GACc,iBAAVA,IACRA,EAAQA,EAAMuM,QAAQ,IAAK,OAG7BrK,EAAMsK,OAAOxM,mCAIH6B,GACZxN,KAAKoY,YAAY5K,EAAKI,SAAUJ,EAAK6K,8CAGpBzK,EAAUyK,GAC3B,OAAO,WACLzK,EAAS0K,SAAW1K,EAAS0K,QAC7B1K,EAAS2K,cAAgB3K,EAAS2K,aAClC3K,EAAS+F,MAAQ/F,EAAS+F,KAC1B/F,EAASwK,aAAc,EACvBC,EAASG,oBAAqB,EAC9BH,EAASI,mBAAoB,EAC7BJ,EAASK,kBAAmB,yCAIX9K,EAAU+K,EAAanE,GAC1C,OAAO,SAASoE,GACdhL,EAAS+K,GAAenE,EAASoE,GACjChL,EAASwK,aAAc,0NC5DRS,aACnB,SAAAA,iGAAcC,CAAA9Y,KAAA6Y,GAEZ7Y,KAAKwU,SAAW,yDAGX,IAAAlD,EAAAtR,KACC+Y,EAAS,IAAInZ,gBACb8M,EAAgBqF,EAAOrF,cACvBW,EAAa0E,EAAO3E,QAAQC,WAC5B2L,EAAe,GA0BrB,OAxBAD,EAAOE,QAAQlH,EAAO3E,QAAQD,MAE9BE,EAAW6L,QAAQ,SAAAC,GAEjBH,EAAaI,KAAK,IAAIC,UAAQ,SAACC,EAASC,GAEtCR,EAAOS,KAAKL,EAAU5L,MAEpB,SAAAH,GACEA,EAAQqM,WAAa/M,EAGrB,IAAMgN,EAAW,GACjBA,EAASP,EAAU7L,MAAQF,EACxBsM,EAASP,EAAU7L,gBAAiB1N,WACrC0Z,EAAQI,IAEZ1C,EAAQ2C,cACR,SAAAhC,GAAG,OAAI4B,EAAO,IAAIK,MAAMjC,EAAM,2CAA6CwB,EAAU5L,eAMpF8L,UAAQQ,IAAIb,GAAcc,KAAK,SAAAtF,GAEpC,IAAI,IAAIuF,EAAI,EAAGA,EAAIvF,EAASjR,OAAQwW,IAClCzI,EAAKkD,SAASxO,OAAOc,KAAK0N,EAASuF,IAAI,IAAMvF,EAASuF,GAAG/T,OAAOc,KAAK0N,EAASuF,IAAI,KAEnF,SAAAC,GAAM,OAAIjW,QAAQoR,IAAI6E,8CCjDRC,EACnB,SAAAA,EAAY7I,EAAO5D,gGAAM0M,CAAAla,KAAAia,GACvB,IAAMvM,EAAY,IAAI9N,oBAAwB4N,EAAK6K,UAC7C8B,EAAW,IAAIva,eAAmB8N,GACxCyM,EAASvM,SAASwM,WAAY,EAC9BD,EAASvM,SAAS4F,QAAU,IAC5B2G,EAASvM,SAASsG,aAAc,EAChC1G,EAAK7K,IAAIwX,GAET,IAAME,EAAQ,IAAIza,gBAAoB4N,EAAK6K,UACrCiC,EAAY,IAAI1a,eAAmBya,GACzCC,EAAU1M,SAASwM,WAAY,EAC/BE,EAAU1M,SAAS4F,QAAU,IAC7B8G,EAAU1M,SAASsG,aAAc,EACjC1G,EAAK7K,IAAI2X,GAETlJ,EAAMzO,IAAI,IAAI/C,YAAgB4N,IAC9B4D,EAAMzO,IAAI,IAAI/C,oBAAwB4N,EAAM,IAC5C4D,EAAMzO,IAAI,IAAI/C,sBAA0B4N,EAAM,+KCb7B+M,aACnB,SAAAA,EAAYnJ,EAAOoJ,EAAShG,gGAAUiG,CAAAza,KAAAua,GACpCva,KAAKoR,MAAQA,EACbpR,KAAKwU,SAAWA,EAGhBxU,KAAK+Y,OAAS,IAAInZ,eAAmB4a,GACrCxa,KAAK0a,IAAM,2DAGN,IAAApJ,EAAAtR,KAELA,KAAK+Y,OAAOS,KACVzH,EAAO7E,MAAMC,KACb,SAAAuN,GACEA,EAAIC,SAAS,SAAAC,GACX,GAAGA,aAAiBhb,OAAY,CAE9B,IAAMgO,EAAW,IAAI2F,EAAS,UAAUK,SACxChG,EAASuG,IAAM7C,EAAKkD,SAASqG,GAC7BD,EAAMhN,SAAWA,EAGdmE,EAAOpD,OAAOxI,UACfyU,EAAMtF,eAAgB,EACtBsF,EAAM7H,YAAa,MAMtBhB,EAAO5F,OAAS4F,EAAOvE,KAAKC,cAC7B,IAAIwM,EAAW3I,EAAKF,MAAOsJ,IAI7BpJ,EAAKoJ,IAAMA,GAEP9Y,MAAMc,eAAeqP,EAAO7E,MAAMtL,QAGxCoV,EAAQ2C,cACR3C,EAAQ8D,uNClDd,IAAMC,EAAQ,CACZnX,KAAU,GACVe,GAAU,GACVhB,MAAW,GACXqX,KAAU,GACVC,MAAW,GACXC,IAAW,EACXC,OAAW,IAGQC,aACnB,SAAAA,EAAYxV,GAAY,IAAA0L,EAAAtR,kGAAAqb,CAAArb,KAAAob,GACtBpb,KAAK4F,WAAaA,GAAcG,SAChC/F,KAAKsb,SAAW,GAGhBtb,KAAK4F,WAAWiE,iBAAiB,UAAW,SAACL,GAAD,OAAW8H,EAAKiK,YAAY/R,KAAQ,GAChFxJ,KAAK4F,WAAWiE,iBAAiB,QAAS,SAACL,GAAD,OAAW8H,EAAKiK,YAAY/R,KAAQ,GAG9E6B,OAAOxB,iBAAiB,OAAQ,kBAAMyH,EAAKkK,SAAQ,4DAG3C,IAAAC,EAAAzb,KACRA,KAAK4F,WAAWsE,oBAAoB,UAAW,SAACV,GAAD,OAAWiS,EAAKF,YAAY/R,KAAQ,GACnFxJ,KAAK4F,WAAWsE,oBAAoB,QAAS,SAACV,GAAD,OAAWiS,EAAKF,YAAY/R,KAAQ,GAGjF6B,OAAOnB,oBAAoB,OAAQ,kBAAMuR,EAAKD,SAAQ,oCAItD,IAAI,IAAME,KAAQ1b,KAAKsb,SACrBtb,KAAKsb,SAASI,IAAQ,sCAGdlS,GAKV,IAAMiB,EAAUjB,EAAMiB,QACtBzK,KAAKsb,SAAS7Q,GAA0B,YAAfjB,EAAMV,qCAGzB6S,GAEN,IADA,IAAM7U,EAAO6U,EAAQC,MAAM,KACnB7B,EAAI,EAAGA,EAAIjT,EAAKvD,OAAQwW,IAAK,CACnC,IAAMnB,EAAM9R,EAAKiT,GACb8B,GAAU,EAMd,GAJEA,GADqC,GAApC7V,OAAOc,KAAKiU,GAAOe,QAAQlD,GAClB5Y,KAAKsb,SAASP,EAAMnC,IAEpB5Y,KAAKsb,SAAS1C,EAAImD,cAAcC,WAAW,KAEnDH,EACF,OAAO,EAGX,OAAO,uCAGIrS,EAAOmS,GAMlB,IALA,IAAMM,EAAUlB,EACVmB,EAAYlW,OAAOc,KAAKmV,GACxBnV,EAAO6U,EAAQC,MAAM,KAGnB7B,EAAI,EAAGA,EAAIjT,EAAKvD,OAAQwW,IAAK,CACnC,IAAMnB,EAAM9R,EAAKiT,GACb8B,GAAU,EAcd,GAbW,UAARjD,EACDiD,IAAUrS,EAAM2S,SACA,SAARvD,EACRiD,IAAUrS,EAAM4S,QACA,QAARxD,EACRiD,IAAUrS,EAAM6S,OACA,SAARzD,EACRiD,IAAUrS,EAAM8S,SACoB,IAA5BJ,EAAUJ,QAAQlD,GAC1BiD,EAAUrS,EAAMiB,UAAYwR,EAAQrD,GAC5BpP,EAAMiB,UAAYmO,EAAImD,cAAcC,WAAW,KACvDH,GAAU,IAERA,EACF,OAAO,EAGX,OAAO,iNCnFUU,aACnB,SAAAA,EAAYhK,EAAUnB,EAAOnD,EAAQM,GAAU,IAAA+C,EAAAtR,kGAAAwc,CAAAxc,KAAAuc,GAE7Cvc,KAAKuS,SAAWA,EAChBvS,KAAKoR,MAAQA,EACbpR,KAAKiO,OAASA,EACdjO,KAAKuO,SAAWA,EAEhBvO,KAAKyc,QAAU,KAGfzc,KAAK0c,SAAW,IAAItB,EAIpBpb,KAAKuS,SAAS3M,WAAWiE,iBAAiB,YAAa,SAACL,GAAD,OAAWwN,EAAQ2F,SAASrL,EAAKxH,YAAYN,GAAQ,OAAM,GAClHxJ,KAAKuS,SAAS3M,WAAWiE,iBAAiB,aAAc,SAACL,GAAD,OAAW8H,EAAKsL,aAAapT,KAAQ,GAC7FxJ,KAAKuS,SAAS3M,WAAWiE,iBAAiB,YAAa,SAACL,GAAD,OAAW8H,EAAKuL,YAAYrT,KAAQ,GAG3FxJ,KAAK0c,SAAS9W,WAAWiE,iBAAiB,UAAW,SAACL,GAEjDA,EAAMsT,QAINxL,EAAKoL,SAASK,aAAavT,EAAO,WACnCzF,QAAQoR,IAAI,+EAKN3L,GACVA,EAAMC,iBAENsI,EAAOtF,aAAc,uCAGVjD,GACXA,EAAMC,iBAENsI,EAAOtF,aAAc,sCAGXjD,GACVA,EAAMC,iBAENgO,aAAazX,KAAKyc,SAElBzc,KAAKyc,QAAU/E,WAAW,WACxB3F,EAAOvF,eAAgB,GACtB,KAEHuF,EAAOvF,eAAgB,2CCvDNwQ,EACnB,SAAAA,EAAYC,EAAMzP,GAAM,IAAA8D,EAAAtR,kGAAAkd,CAAAld,KAAAgd,GACtB,IAAMG,EAAM,IAAIC,IAAIC,IAEpBrd,KAAKiO,OAASgP,EAAKhP,OAAOyE,YAC1B1S,KAAKuO,SAAW0O,EAAK1O,SAAS+E,cAC9BtT,KAAKsd,MAAQL,EAAKK,MAMlB,IAAMC,EAAeJ,EAAIK,UAAU,UAC7BC,EAAeF,EAAa5a,IAAIoP,EAAO9D,OAAQ,MAAO,EAAG,KAAKX,KAAK,cACzEmQ,EAAaC,SAAS,SAAC/R,GACrB2F,EAAK/C,SAAShI,cAAe,EAE7B+K,EAAKrD,OAAOxK,IAAMkI,IAEpB8R,EAAaE,eAAe,WAC1BrM,EAAKrD,OAAO3J,yBAEZgN,EAAK/C,SAAShI,cAAe,IAE/B,IAAMqX,EAAkBL,EAAa5a,IAAIoP,EAAO9D,OAAQ,SAAU,EAAG,GAAGX,KAAK,iBAC7EsQ,EAAgBF,SAAS,SAAC/R,GACxB2F,EAAK/C,SAAShI,cAAe,EAE7B+K,EAAKrD,OAAOE,OAASxC,IAEvBiS,EAAgBD,eAAe,WAC7BrM,EAAKrD,OAAO3J,yBAEZgN,EAAK/C,SAAShI,cAAe,IAELgX,EAAaM,SAAS9L,EAAOhE,IAAK,SAAST,KAAK,aACxDoQ,SAAS,SAAC/R,GAC1BsR,EAAK7L,MAAMrD,IAAIF,MAAMsK,OAAOxM,KAE9B,IAAMmS,EAAmBP,EAAa5a,IAAIoP,EAAOhE,IAAK,OAAQ,EAAO,KAAOT,KAAK,YACjFwQ,EAAiBJ,SAAS,SAAC/R,GACzB2F,EAAK/C,SAAShI,cAAe,EAE7B0W,EAAK7L,MAAMrD,IAAIgQ,QAAUpS,IAE3BmS,EAAiBH,eAAe,WAC9BrM,EAAK/C,SAAShI,cAAe,IAK/B,IAAMyX,EAAiBb,EAAIK,UAAU,YACrCQ,EAAerb,IAAIoP,EAAOxD,SAAU,cAAcjB,KAAK,eAAeoQ,SAAS,SAAC/R,GAC9E2F,EAAK/C,SAAS5H,WAAagF,IAE7B,IAAMsS,EAA6BD,EAAerb,IAAIoP,EAAOxD,SAAU,mBAAoB,EAAG,GAAGjB,KAAK,kBACtG2Q,EAA2BP,SAAS,SAAC/R,GACnC2F,EAAK/C,SAAShI,cAAe,EAC7B+K,EAAK/C,SAAS3H,gBAAkB+E,IAElCsS,EAA2BN,eAAe,WACxCrM,EAAK/C,SAAShI,cAAe,IAK9B,IAAM2X,EAAaf,EAAIK,UAAU,QACjCU,EAAWvb,IAAIoP,EAAOvE,KAAM,eAAe,GAAMF,KAAK,eAAeoQ,SAAS,SAAC/R,GAG3E6B,EAAKI,SAAS4F,QAFb7H,GACD6B,EAAKI,SAASsG,aAAc,EACJ,IAEA,IAG5BgK,EAAWvb,IAAIoP,EAAOvE,KAAM,aAAa,GAAMF,KAAK,aAAaoQ,SAAS,SAAC/R,GACzE6B,EAAKI,SAASF,UAAY/B,IAM7B,IAAMwS,EAAqBhB,EAAIK,UAAU,iBACzCW,EAAmBxb,IAAIoP,EAAOvD,aAAc,WAAWlB,KAAK,WAAWoQ,SAAS,SAAC/R,GAC/E2F,EAAKgM,MAAM9O,aAAasE,QAAUnH,IAEpCwS,EAAmBN,SAAS9L,EAAOvD,aAAc,SAASlB,KAAK,SAASoQ,SAAS,SAAC/R,GAChF2F,EAAKgM,MAAM9O,aAAaX,MAAMsK,OAAOxM,KAKvC,IAAMyS,EAAyBjB,EAAIK,UAAU,qBAC7CY,EAAuBzb,IAAIoP,EAAOtD,iBAAkB,WAAWnB,KAAK,WAAWoQ,SAAS,SAAC/R,GACvF2F,EAAKgM,MAAM7O,iBAAiBqE,QAAUnH,IAExCyS,EAAuBP,SAAS9L,EAAOtD,iBAAkB,SAASnB,KAAK,SAASoQ,SAAS,SAAC/R,GACxF2F,EAAKgM,MAAM7O,iBAAiBZ,MAAMsK,OAAOxM,KAE3C,IAAM0S,EAA+BD,EAAuBzb,IAAIoP,EAAOtD,iBAAkB,YAAa,EAAG,GAAGnB,KAAK,aACjH+Q,EAA6BX,SAAS,SAAC/R,GACrC2F,EAAK/C,SAAShI,cAAe,EAE7B+K,EAAKgM,MAAM7O,iBAAiBC,UAAY/C,IAE1C0S,EAA6BV,eAAe,WAC1CrM,EAAK/C,SAAShI,cAAe,IAE/B,IAAM+X,EAA+BF,EAAuBzb,IAAIoP,EAAOtD,iBAAkB,KAAM,IAAM,KAAMnB,KAAK,cAChHgR,EAA6BZ,SAAS,SAAC/R,GACrC2F,EAAK/C,SAAShI,cAAe,EAE7B+K,EAAKgM,MAAM7O,iBAAiBrL,SAAS4B,EAAI2G,IAE3C2S,EAA6BX,eAAe,WAC1CrM,EAAK/C,SAAShI,cAAe,IAE/B,IAAMgY,EAA+BH,EAAuBzb,IAAIoP,EAAOtD,iBAAkB,KAAM,IAAM,KAAMnB,KAAK,cAChHiR,EAA6Bb,SAAS,SAAC/R,GACrC2F,EAAK/C,SAAShI,cAAe,EAE7B+K,EAAKgM,MAAM7O,iBAAiBrL,SAAS+B,EAAIwG,IAE3C4S,EAA6BZ,eAAe,WAC1CrM,EAAK/C,SAAShI,cAAe,IAE/B,IAAMiY,EAA+BJ,EAAuBzb,IAAIoP,EAAOtD,iBAAkB,KAAM,IAAM,KAAMnB,KAAK,cAChHkR,EAA6Bd,SAAS,SAAC/R,GACrC2F,EAAK/C,SAAShI,cAAe,EAE7B+K,EAAKgM,MAAM7O,iBAAiBrL,SAAS6B,EAAI0G,IAE3C6S,EAA6Bb,eAAe,WAC1CrM,EAAK/C,SAAShI,cAAe,IAI/B,IAAMkY,EAAetB,EAAIK,UAAU,cACnCiB,EAAa9b,IAAIoP,EAAOpD,OAAQ,WAAWrB,KAAK,WAAWoQ,SAAS,SAAC/R,GACnE2F,EAAKgM,MAAM7O,iBAAiBsE,WAAapH,IAE3C8S,EAAa9b,IAAIoP,EAAOpD,OAAQ,iBAAiBrB,KAAK,kBAAkBoQ,SAAS,SAAC/R,GAChF2F,EAAKgM,MAAMrK,uBAAuBH,QAAUnH,IAE9C,IAAM+S,EAAgBD,EAAa9b,IAAIoP,EAAOpD,OAAQ,OAAQ,EAAG,KAAKrB,KAAK,QAC3EoR,EAAchB,SAAS,SAAC/R,GACtB2F,EAAK/C,SAAShI,cAAe,EAE7B+K,EAAKgM,MAAM7O,iBAAiBE,OAAOV,OAAOD,KAAOrC,IAEnD+S,EAAcf,eAAe,WAC3BrM,EAAK/C,SAAShI,cAAe,EAC7B+K,EAAKgM,MAAM7O,iBAAiBE,OAAOwF,IAAI/I,UACvCkG,EAAKgM,MAAM7O,iBAAiBE,OAAOwF,IAAM,KACzC7C,EAAKgM,MAAMrK,uBAAuBzO,WAEpC,IAAMma,EAAeF,EAAa9b,IAAIoP,EAAOpD,OAAQ,MAAO,EAAG,MAAMrB,KAAK,OAC1EqR,EAAajB,SAAS,SAAC/R,GACrB2F,EAAK/C,SAAShI,cAAe,EAE7B+K,EAAKgM,MAAM7O,iBAAiBE,OAAOV,OAAOC,IAAMvC,IAElDgT,EAAahB,eAAe,WAC1BrM,EAAK/C,SAAShI,cAAe,EAC7B+K,EAAKgM,MAAM7O,iBAAiBE,OAAOwF,IAAI/I,UACvCkG,EAAKgM,MAAM7O,iBAAiBE,OAAOwF,IAAM,KACzC7C,EAAKgM,MAAMrK,uBAAuBzO,WAEpC,IAAMoa,EAAeH,EAAa9b,IAAIoP,EAAOpD,OAAQ,OAAQ,IAAK,KAAKrB,KAAK,OAC5EsR,EAAalB,SAAS,SAAC/R,GACrB2F,EAAK/C,SAAShI,cAAe,EAE7B+K,EAAKgM,MAAM7O,iBAAiBE,OAAOV,OAAOpK,IAAM8H,IAElDiT,EAAajB,eAAe,WAC1BrM,EAAK/C,SAAShI,cAAe,EAC7B+K,EAAKgM,MAAM7O,iBAAiBE,OAAOwF,IAAI/I,UACvCkG,EAAKgM,MAAM7O,iBAAiBE,OAAOwF,IAAM,KACzC7C,EAAKgM,MAAMrK,uBAAuBzO,WAEpC,IAAMqa,EAAiBJ,EAAa9b,IAAIoP,EAAOpD,OAAQ,SAAU,IAAK,KAAKrB,KAAK,SAChFuR,EAAenB,SAAS,SAAC/R,GACvB2F,EAAK/C,SAAShI,cAAe,EAE7B+K,EAAKgM,MAAM7O,iBAAiBE,OAAOV,OAAOtK,MAAQgI,IAEpDkT,EAAelB,eAAe,WAC5BrM,EAAK/C,SAAShI,cAAe,EAC7B+K,EAAKgM,MAAM7O,iBAAiBE,OAAOwF,IAAI/I,UACvCkG,EAAKgM,MAAM7O,iBAAiBE,OAAOwF,IAAM,KACzC7C,EAAKgM,MAAMrK,uBAAuBzO,WAEpC,IAAMsa,EAAkBL,EAAa9b,IAAIoP,EAAOpD,OAAQ,UAAW,IAAK,KAAKrB,KAAK,UAClFwR,EAAgBpB,SAAS,SAAC/R,GACxB2F,EAAK/C,SAAShI,cAAe,EAE7B+K,EAAKgM,MAAM7O,iBAAiBE,OAAOV,OAAOnK,OAAS6H,IAErDmT,EAAgBnB,eAAe,WAC7BrM,EAAK/C,SAAShI,cAAe,EAC7B+K,EAAKgM,MAAM7O,iBAAiBE,OAAOwF,IAAI/I,UACvCkG,EAAKgM,MAAM7O,iBAAiBE,OAAOwF,IAAM,KACzC7C,EAAKgM,MAAMrK,uBAAuBzO,WAEpC,IAAMua,EAAgBN,EAAa9b,IAAIoP,EAAOpD,OAAQ,QAAS,IAAK,KAAKrB,KAAK,QAC9EyR,EAAcrB,SAAS,SAAC/R,GACtB2F,EAAK/C,SAAShI,cAAe,EAE7B+K,EAAKgM,MAAM7O,iBAAiBE,OAAOV,OAAOrK,KAAO+H,IAEnDoT,EAAcpB,eAAe,WAC3BrM,EAAK/C,SAAShI,cAAe,EAC7B+K,EAAKgM,MAAM7O,iBAAiBE,OAAOwF,IAAI/I,UACvCkG,EAAKgM,MAAM7O,iBAAiBE,OAAOwF,IAAM,KACzC7C,EAAKgM,MAAMrK,uBAAuBzO,WAEpC,IAAMwa,EAAgBP,EAAa9b,IAAIoP,EAAOpD,OAAQ,QAAS,KAAU,GAAGrB,KAAK,QACjF0R,EAActB,SAAS,SAAC/R,GACtB2F,EAAK/C,SAAShI,cAAe,EAE7B+K,EAAKgM,MAAM7O,iBAAiBE,OAAOE,KAAOlD,IAE5CqT,EAAcrB,eAAe,WAC3BrM,EAAK/C,SAAShI,cAAe,EAC7B+K,EAAKgM,MAAM7O,iBAAiBE,OAAOwF,IAAI/I,UACvCkG,EAAKgM,MAAM7O,iBAAiBE,OAAOwF,IAAM,KACzC7C,EAAKgM,MAAMrK,uBAAuBzO,WAKpC,IAAMya,EAAmB9B,EAAIK,UAAU,eACvCyB,EAAiBtc,IAAIoP,EAAO/C,WAAY,WAAW1B,KAAK,WAAWoQ,SAAS,SAAC/R,GAC3E2F,EAAKgM,MAAMtO,WAAW8D,QAAUnH,IAElCsT,EAAiBpB,SAAS9L,EAAO/C,WAAY,SAAS1B,KAAK,SAASoQ,SAAS,SAAC/R,GAC5E2F,EAAKgM,MAAMtO,WAAWnB,MAAMsK,OAAOxM,KAErC,IAAMuT,EAAyBD,EAAiBtc,IAAIoP,EAAO/C,WAAY,YAAa,EAAG,GAAG1B,KAAK,aAC/F4R,EAAuBxB,SAAS,SAAC/R,GAC/B2F,EAAK/C,SAAShI,cAAe,EAE7B+K,EAAKgM,MAAMtO,WAAWN,UAAY/C,IAEpCuT,EAAuBvB,eAAe,WACpCrM,EAAK/C,SAAShI,cAAe,IAE/B,IAAM4Y,EAAwBF,EAAiBtc,IAAIoP,EAAO/C,WAAY,WAAY,EAAG,KAAM1B,KAAK,YAChG6R,EAAsBzB,SAAS,SAAC/R,GAC9B2F,EAAK/C,SAAShI,cAAe,EAE7B+K,EAAKgM,MAAMtO,WAAW3M,SAAWsJ,IAEnCwT,EAAsBxB,eAAe,WACnCrM,EAAK/C,SAAShI,cAAe,IAE/B,IAAM6Y,EAAyBH,EAAiBtc,IAAIoP,EAAO/C,WAAY,KAAM,IAAM,KAAM1B,KAAK,cAC9F8R,EAAuB1B,SAAS,SAAC/R,GAC/B2F,EAAK/C,SAAShI,cAAe,EAE7B+K,EAAKgM,MAAMtO,WAAW5L,SAAS4B,EAAI2G,IAErCyT,EAAuBzB,eAAe,WACpCrM,EAAK/C,SAAShI,cAAe,IAE/B,IAAM8Y,EAAyBJ,EAAiBtc,IAAIoP,EAAO/C,WAAY,KAAM,IAAM,KAAM1B,KAAK,cAC9F+R,EAAuB3B,SAAS,SAAC/R,GAC/B2F,EAAK/C,SAAShI,cAAe,EAE7B+K,EAAKgM,MAAMtO,WAAW5L,SAAS+B,EAAIwG,IAErC0T,EAAuB1B,eAAe,WACpCrM,EAAK/C,SAAShI,cAAe,IAE/B,IAAM+Y,EAAyBL,EAAiBtc,IAAIoP,EAAO/C,WAAY,KAAM,IAAM,KAAM1B,KAAK,cAC9FgS,EAAuB5B,SAAS,SAAC/R,GAC/B2F,EAAK/C,SAAShI,cAAe,EAE7B+K,EAAKgM,MAAMtO,WAAW5L,SAAS6B,EAAI0G,IAErC2T,EAAuB3B,eAAe,WACpCrM,EAAK/C,SAAShI,cAAe,IAK/B,IAAMgZ,EAAkBpC,EAAIK,UAAU,cACtC+B,EAAgB5c,IAAIoP,EAAO9C,UAAW,WAAW3B,KAAK,WAAWoQ,SAAS,SAAC/R,GACzE2F,EAAKgM,MAAMrO,UAAU6D,QAAUnH,IAEjC4T,EAAgB1B,SAAS9L,EAAO9C,UAAW,SAAS3B,KAAK,SAASoQ,SAAS,SAAC/R,GAC1E2F,EAAKgM,MAAMrO,UAAUpB,MAAMsK,OAAOxM,KAEpC4T,EAAgB1B,SAAS9L,EAAO9C,UAAW,eAAe3B,KAAK,gBAAgBoQ,SAAS,SAAC/R,GACvF2F,EAAKgM,MAAMrO,UAAUC,YAAYiJ,OAAOxM,KAE1C,IAAM6T,EAAwBD,EAAgB5c,IAAIoP,EAAO9C,UAAW,YAAa,EAAG,GAAG3B,KAAK,aAC5FkS,EAAsB9B,SAAS,SAAC/R,GAC9B2F,EAAK/C,SAAShI,cAAe,EAE7B+K,EAAKgM,MAAMrO,UAAUP,UAAY/C,IAEnC6T,EAAsB7B,eAAe,WACnCrM,EAAK/C,SAAShI,cAAe,IAE/B,IAAMkZ,EAAwBF,EAAgB5c,IAAIoP,EAAO9C,UAAW,KAAM,IAAM,KAAM3B,KAAK,cAC3FmS,EAAsB/B,SAAS,SAAC/R,GAC9B2F,EAAK/C,SAAShI,cAAe,EAE7B+K,EAAKgM,MAAMrO,UAAU7L,SAAS4B,EAAI2G,IAEpC8T,EAAsB9B,eAAe,WACnCrM,EAAK/C,SAAShI,cAAe,IAE/B,IAAMmZ,EAAwBH,EAAgB5c,IAAIoP,EAAO9C,UAAW,KAAM,IAAK,KAAM3B,KAAK,cAC1FoS,EAAsBhC,SAAS,SAAC/R,GAC9B2F,EAAK/C,SAAShI,cAAe,EAE7B+K,EAAKgM,MAAMrO,UAAU7L,SAAS+B,EAAIwG,IAEpC+T,EAAsB/B,eAAe,WACnCrM,EAAK/C,SAAShI,cAAe,IAE/B,IAAMoZ,EAAwBJ,EAAgB5c,IAAIoP,EAAO9C,UAAW,KAAM,IAAM,KAAM3B,KAAK,cAC3FqS,EAAsBjC,SAAS,SAAC/R,GAC9B2F,EAAK/C,SAAShI,cAAe,EAE7B+K,EAAKgM,MAAMrO,UAAU7L,SAAS6B,EAAI0G,IAEpCgU,EAAsBhC,eAAe,WACnCrM,EAAK/C,SAAShI,cAAe,+KCjTdqZ,aACnB,SAAAA,EAAYvO,GAAW,IAAAC,EAAAtR,kGAAA6f,CAAA7f,KAAA4f,GAErB5f,KAAKqR,UAAYA,EAGjBrR,KAAK8f,MAAQ,IAAIlgB,QACjBI,KAAK+f,EAAI,EACT/f,KAAKggB,KAAO,KACZhgB,KAAKigB,MAAQ,EACbjgB,KAAKkgB,MAAQ,KACblgB,KAAKmgB,UAAW,GAChBngB,KAAKogB,QAAU,IAAIxgB,QACnBI,KAAKqgB,cAAgB,KACrBrgB,KAAKsgB,KAAO,IAAI1gB,UAEhBI,KAAKoR,MAAQ,IAAIxR,QAIdyL,OAAOwG,mBACRE,EAAOpF,IAAMtB,OAAOwG,kBAItB7R,KAAKuS,SAAW,IAAIpB,EAASnR,KAAKoR,MAAOC,GAGzCrR,KAAKiO,OAAS,IAAIqE,EAAOtS,KAAKuS,SAASf,eAEvCzN,QAAQoR,IAAInV,KAAKiO,OAAOyE,YAAYtP,UACpCpD,KAAKuO,SAAW,IAAI4E,EAASnT,KAAKiO,OAAOyE,YAAarB,GACtDrR,KAAKsd,MAAQ,IAAI3K,EAAM3S,KAAKoR,OAGb,CAAC,UAAW,cAAe,QAAS,QAC5C8H,QAAQ,SAACoE,GAAD,OAAWhM,EAAKgM,MAAMiD,MAAMjD,KAMxCvL,EAAO5F,OAAS4F,EAAO3F,iBACxBpM,KAAKwgB,MAAQ,IAAIjL,EAAMvV,KAAKuS,UAC5BvS,KAAKwgB,MAAMC,SAIbzgB,KAAKoN,QAAU,IAAIyL,EAGnB7Y,KAAKoN,QAAQoM,OAAOM,KAAK,WACvBxI,EAAKkJ,QAAU,IAAI5a,iBAGnB0R,EAAKpE,MAAQ,IAAIqN,EAAMjJ,EAAKF,MAAOE,EAAKkJ,QAASlJ,EAAKlE,QAAQoH,UAC9DlD,EAAKpE,MAAMsM,OACXlI,EAAK+G,SAAW,IAAI9D,EAASjD,EAAKF,MAAOE,EAAKlE,QAAQoH,UACtDlD,EAAK+G,SAASqI,KAAK,QAAnBpP,CAA4B,IAAK,IAAK,EAAG,GACzCA,EAAK+G,SAASkI,MAAM,CAAC,EAAG,GAAI,GAAI,CAAC7f,KAAKC,GAAK,EAAG,EAAG,IACjD2Q,EAAK+G,SAASqI,KAAK,MAAnBpP,CAA0B,IAAK,IAAK,EAAG,GACvCA,EAAK+G,SAASkI,MAAM,CAAC,GAAI,GAAI,GAAI,EAAE7f,KAAKC,GAAK,EAAG,EAAG,IACnD2Q,EAAK+G,SAASqI,KAAK,OAAnBpP,CAA2B,GAAG,GAAG,IACjCA,EAAK+G,SAASkI,MAAM,CAAC,EAAG,GAAI,GAAI,CAAC7f,KAAKC,GAAK,GAAID,KAAKC,GAAK,EAAE,IAC3D,IAAIggB,EAAe,IAAI/gB,mBAAwB,EAAG,EAAG,EAAG,IACpDghB,EAAe,IAAIhhB,mBAAwB,CAC7CsU,aAAa,EACbL,aAAa,EACbL,QAAS,EACT3F,MAAO,QACPC,SAAU,EACV+S,SAAU,EACVC,UAAW,IAETC,EAAQ,IAAInhB,OAAY+gB,EAAcC,GAE1CG,EAAMC,gBAAiB,EACvBD,EAAME,aAAc,EACpBF,EAAMG,QAAUxgB,KAAKC,GAAK,GAE1B,IAAIwgB,EAAQ,IAAIvhB,OAAY+gB,EAAcC,GAC1CO,EAAM/d,SAAS+B,EAAI,EACnBgc,EAAMH,gBAAiB,EACvBG,EAAMF,aAAc,EACpBE,EAAMD,QAAUxgB,KAAKC,GAAK,GAG1B,IAAIygB,EAAO,IAAIxhB,QACfwhB,EAAKze,IAAIoe,GACTK,EAAKze,IAAIwe,GACTC,EAAKhe,SAAS+B,EAAImM,EAAK+G,SAASrE,MAAM5Q,SAAS+B,EAAE,IACjDic,EAAKhe,SAAS4B,EAAI,GAClBoc,EAAKhe,SAAS6B,EAAI,GAClBqM,EAAKF,MAAMzO,IAAIye,GAEf,IAAIC,EAAaD,EAAK/d,QACtBge,EAAWje,SAAS4B,GAAK,GACzBqc,EAAWje,SAAS6B,GAAK,IACzBqM,EAAKF,MAAMzO,IAAI0e,GACf,IAAInB,EAAQ,IAAItgB,mBAAwB,CACxC,IAAIA,UAAc0R,EAAK+G,SAAS1D,KAAKvR,SAAS4B,EAAEsM,EAAK+G,SAAS1D,KAAKvR,SAAS+B,EAAE,IAAImM,EAAK+G,SAAS1D,KAAKvR,SAAS6B,GAC9G,IAAIrF,UAAc0R,EAAK+G,SAAS1D,KAAKvR,SAAS4B,EAAEsM,EAAK+G,SAAS1D,KAAKvR,SAAS+B,EAAE,GAAGmM,EAAK+G,SAAS1D,KAAKvR,SAAS6B,GAC7Gmc,EAAKhe,SACL,IAAIxD,UAAcwhB,EAAKhe,SAAS4B,EAAGsM,EAAK+G,SAASlE,IAAI/Q,SAAS+B,EAAGic,EAAKhe,SAAS6B,KAG3Eqc,GADJhQ,EAAK4O,MAAQA,GACMqB,UAAW,IAC1BC,GAAK,IAAI5hB,kBAAuB6hB,cAAeH,GAC/CI,EAAK,IAAI9hB,oBAAyB,CAAEiO,MAAO,MAC/CyD,EAAK0O,KAAO,IAAIpgB,OAAY4hB,EAAIE,GAG9BpQ,EAAKF,MAAMzO,IAAI2O,EAAK8O,SAGtB9O,EAAKkJ,QAAQmH,WAAa,SAACC,EAAM9J,EAAQC,GACvChU,QAAQoR,IAAR,GAAA0M,OAAeD,EAAf,MAAAC,OAAwB/J,EAAxB,KAAA+J,OAAkC9J,KAIpCzG,EAAKkJ,QAAQsH,OAAS,WAEpB,IAAIvF,EAAYjL,EAAKiB,SAASf,cAAeF,EAAKF,MAAOE,EAAKrD,OAAOyE,YAAapB,EAAK/C,SAAS+E,eAG7FvB,EAAO5F,OACR,IAAI6Q,EAAO1L,EAAMA,EAAKpE,MAAMwN,KAI9B3I,EAAO1F,UAAW,EAClBiF,EAAKD,UAAU0Q,cAAc,YAAY3R,MAAM4R,QAAU,UAK7DhiB,KAAKqS,iEAyBL,GApBGN,EAAO5F,OAAS4F,EAAO3F,gBACxBmJ,EAAME,QAIRzV,KAAKuS,SAASF,OAAOrS,KAAKoR,MAAOpR,KAAKiO,OAAOyE,aAG1CX,EAAO5F,OAAS4F,EAAO3F,gBACxBmJ,EAAMK,MAOR/I,IAAMrI,SACNxE,KAAKuO,SAAS+E,cAAc9O,SAGV,OAAfxE,KAAKkgB,MAAe,CAIxB,IAAI+B,EAAgB,IAAIriB,iBAAsB,CAAEiO,MAAO,UACnDwS,EAAgB,IAAIzgB,WACpBsiB,EAAO,IAAItiB,UAA4B,EAAdc,KAAKyhB,SAAW,EAAgB,EAAdzhB,KAAKyhB,SAAW,EAAgB,EAAdzhB,KAAKyhB,SAAW,GACjF9B,EAAc+B,SAAShJ,KAAK8I,GAC5B,IAAIG,EAAM,IAAIziB,SAAcygB,EAAe4B,GAC3CI,EAAItC,EAAI,EAGR/f,KAAKogB,QAAQzd,IAAI0f,GACjBriB,KAAKogB,QAAQkC,eACb,IAAIC,EAAIviB,KAEPA,KAAKogB,QAAQoC,SAAStJ,QAAQ,SAASuJ,GACpCA,EAAE1C,GAAK,EAAK0C,EAAE1C,GAAG,KAAQwC,EAAGnC,QAAQsC,OAAOD,GAC5C,IAAI9d,EAAK,IAAI/E,UAAe,EAAG,EAAG,GAE9B+iB,GADKJ,EAAGrC,MAAM0C,eAAeH,EAAE1C,GACxBwC,EAAGrC,MAAM2C,SAASJ,EAAE1C,IAC3B+C,EAAUP,EAAGrC,MAAM6C,WAAWN,EAAE1C,GAAGiD,YAEnC1C,EAAO,IAAI1gB,UACf0gB,EAAK2C,aAActe,EAAIme,GAAUE,YACjC,IAAIE,EAAUxiB,KAAKyiB,KAAMxe,EAAGc,IAAKqd,IACjCL,EAAE/c,WAAW0d,iBAAkB9C,EAAM4C,GACrCT,EAAErf,SAAS4B,EAAI2d,EAAI3d,EACnByd,EAAErf,SAAS+B,EAAIwd,EAAIxd,EACnBsd,EAAErf,SAAS6B,EAAK0d,EAAI1d,EACpBwd,EAAEH,iBAEJC,EAAGnC,QAAUpgB,KAAKogB,QAIlBiD,sBAAsBrjB,KAAKqS,OAAOiR,KAAKtjB,kDCnN3C,WAEE,GAAIujB,EAASjU,MAEN,CACL,IAAM+B,EAAYtL,SAASyd,eAAe,gBAC1C,IAAI5D,EAAKvO,QAHTkS,EAASxS,sBAOb8B","file":"0.app.js","sourcesContent":["module.exports = function(THREE) {\n  var MOUSE = THREE.MOUSE\n  if (!MOUSE)\n    MOUSE = { LEFT: 0, MIDDLE: 1, RIGHT: 2 };\n\n  /**\n   * @author qiao / https://github.com/qiao\n   * @author mrdoob / http://mrdoob.com\n   * @author alteredq / http://alteredqualia.com/\n   * @author WestLangley / http://github.com/WestLangley\n   * @author erich666 / http://erichaines.com\n   */\n  /*global THREE, console */\n\n  function OrbitConstraint ( object ) {\n\n    this.object = object;\n\n    // \"target\" sets the location of focus, where the object orbits around\n    // and where it pans with respect to.\n    this.target = new THREE.Vector3();\n\n    // Limits to how far you can dolly in and out ( PerspectiveCamera only )\n    this.minDistance = 0;\n    this.maxDistance = Infinity;\n\n    // Limits to how far you can zoom in and out ( OrthographicCamera only )\n    this.minZoom = 0;\n    this.maxZoom = Infinity;\n\n    // How far you can orbit vertically, upper and lower limits.\n    // Range is 0 to Math.PI radians.\n    this.minPolarAngle = 0; // radians\n    this.maxPolarAngle = Math.PI; // radians\n\n    // How far you can orbit horizontally, upper and lower limits.\n    // If set, must be a sub-interval of the interval [ - Math.PI, Math.PI ].\n    this.minAzimuthAngle = - Infinity; // radians\n    this.maxAzimuthAngle = Infinity; // radians\n\n    // Set to true to enable damping (inertia)\n    // If damping is enabled, you must call controls.update() in your animation loop\n    this.enableDamping = false;\n    this.dampingFactor = 0.25;\n\n    ////////////\n    // internals\n\n    var scope = this;\n\n    var EPS = 0.000001;\n\n    // Current position in spherical coordinate system.\n    var theta;\n    var phi;\n\n    // Pending changes\n    var phiDelta = 0;\n    var thetaDelta = 0;\n    var scale = 1;\n    var panOffset = new THREE.Vector3();\n    var zoomChanged = false;\n\n    // API\n\n    this.getPolarAngle = function () {\n\n      return phi;\n\n    };\n\n    this.getAzimuthalAngle = function () {\n\n      return theta;\n\n    };\n\n    this.rotateLeft = function ( angle ) {\n\n      thetaDelta -= angle;\n\n    };\n\n    this.rotateUp = function ( angle ) {\n\n      phiDelta -= angle;\n\n    };\n\n    // pass in distance in world space to move left\n    this.panLeft = function() {\n\n      var v = new THREE.Vector3();\n\n      return function panLeft ( distance ) {\n\n        var te = this.object.matrix.elements;\n\n        // get X column of matrix\n        v.set( te[ 0 ], te[ 1 ], te[ 2 ] );\n        v.multiplyScalar( - distance );\n\n        panOffset.add( v );\n\n      };\n\n    }();\n\n    // pass in distance in world space to move up\n    this.panUp = function() {\n\n      var v = new THREE.Vector3();\n\n      return function panUp ( distance ) {\n\n        var te = this.object.matrix.elements;\n\n        // get Y column of matrix\n        v.set( te[ 4 ], te[ 5 ], te[ 6 ] );\n        v.multiplyScalar( distance );\n\n        panOffset.add( v );\n\n      };\n\n    }();\n\n    // pass in x,y of change desired in pixel space,\n    // right and down are positive\n    this.pan = function ( deltaX, deltaY, screenWidth, screenHeight ) {\n\n      if ( scope.object instanceof THREE.PerspectiveCamera ) {\n\n        // perspective\n        var position = scope.object.position;\n        var offset = position.clone().sub( scope.target );\n        var targetDistance = offset.length();\n\n        // half of the fov is center to top of screen\n        targetDistance *= Math.tan( ( scope.object.fov / 2 ) * Math.PI / 180.0 );\n\n        // we actually don't use screenWidth, since perspective camera is fixed to screen height\n        scope.panLeft( 2 * deltaX * targetDistance / screenHeight );\n        scope.panUp( 2 * deltaY * targetDistance / screenHeight );\n\n      } else if ( scope.object instanceof THREE.OrthographicCamera ) {\n\n        // orthographic\n        scope.panLeft( deltaX * ( scope.object.right - scope.object.left ) / screenWidth );\n        scope.panUp( deltaY * ( scope.object.top - scope.object.bottom ) / screenHeight );\n\n      } else {\n\n        // camera neither orthographic or perspective\n        console.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - pan disabled.' );\n\n      }\n\n    };\n\n    this.dollyIn = function ( dollyScale ) {\n\n      if ( scope.object instanceof THREE.PerspectiveCamera ) {\n\n        scale /= dollyScale;\n\n      } else if ( scope.object instanceof THREE.OrthographicCamera ) {\n\n        scope.object.zoom = Math.max( this.minZoom, Math.min( this.maxZoom, this.object.zoom * dollyScale ) );\n        scope.object.updateProjectionMatrix();\n        zoomChanged = true;\n\n      } else {\n\n        console.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.' );\n\n      }\n\n    };\n\n    this.dollyOut = function ( dollyScale ) {\n\n      if ( scope.object instanceof THREE.PerspectiveCamera ) {\n\n        scale *= dollyScale;\n\n      } else if ( scope.object instanceof THREE.OrthographicCamera ) {\n\n        scope.object.zoom = Math.max( this.minZoom, Math.min( this.maxZoom, this.object.zoom / dollyScale ) );\n        scope.object.updateProjectionMatrix();\n        zoomChanged = true;\n\n      } else {\n\n        console.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.' );\n\n      }\n\n    };\n\n    this.update = function() {\n\n      var offset = new THREE.Vector3();\n\n      // so camera.up is the orbit axis\n      var quat = new THREE.Quaternion().setFromUnitVectors( object.up, new THREE.Vector3( 0, 1, 0 ) );\n      var quatInverse = quat.clone().inverse();\n\n      var lastPosition = new THREE.Vector3();\n      var lastQuaternion = new THREE.Quaternion();\n\n      return function () {\n\n        var position = this.object.position;\n\n        offset.copy( position ).sub( this.target );\n\n        // rotate offset to \"y-axis-is-up\" space\n        offset.applyQuaternion( quat );\n\n        // angle from z-axis around y-axis\n\n        theta = Math.atan2( offset.x, offset.z );\n\n        // angle from y-axis\n\n        phi = Math.atan2( Math.sqrt( offset.x * offset.x + offset.z * offset.z ), offset.y );\n\n        theta += thetaDelta;\n        phi += phiDelta;\n\n        // restrict theta to be between desired limits\n        theta = Math.max( this.minAzimuthAngle, Math.min( this.maxAzimuthAngle, theta ) );\n\n        // restrict phi to be between desired limits\n        phi = Math.max( this.minPolarAngle, Math.min( this.maxPolarAngle, phi ) );\n\n        // restrict phi to be betwee EPS and PI-EPS\n        phi = Math.max( EPS, Math.min( Math.PI - EPS, phi ) );\n\n        var radius = offset.length() * scale;\n\n        // restrict radius to be between desired limits\n        radius = Math.max( this.minDistance, Math.min( this.maxDistance, radius ) );\n\n        // move target to panned location\n        this.target.add( panOffset );\n\n        offset.x = radius * Math.sin( phi ) * Math.sin( theta );\n        offset.y = radius * Math.cos( phi );\n        offset.z = radius * Math.sin( phi ) * Math.cos( theta );\n\n        // rotate offset back to \"camera-up-vector-is-up\" space\n        offset.applyQuaternion( quatInverse );\n\n        position.copy( this.target ).add( offset );\n\n        this.object.lookAt( this.target );\n\n        if ( this.enableDamping === true ) {\n\n          thetaDelta *= ( 1 - this.dampingFactor );\n          phiDelta *= ( 1 - this.dampingFactor );\n\n        } else {\n\n          thetaDelta = 0;\n          phiDelta = 0;\n\n        }\n\n        scale = 1;\n        panOffset.set( 0, 0, 0 );\n\n        // update condition is:\n        // min(camera displacement, camera rotation in radians)^2 > EPS\n        // using small-angle approximation cos(x/2) = 1 - x^2 / 8\n\n        if ( zoomChanged ||\n          lastPosition.distanceToSquared( this.object.position ) > EPS ||\n          8 * ( 1 - lastQuaternion.dot( this.object.quaternion ) ) > EPS ) {\n\n          lastPosition.copy( this.object.position );\n          lastQuaternion.copy( this.object.quaternion );\n          zoomChanged = false;\n\n          return true;\n\n        }\n\n        return false;\n\n      };\n\n    }();\n\n  };\n\n\n  // This set of controls performs orbiting, dollying (zooming), and panning. It maintains\n  // the \"up\" direction as +Y, unlike the TrackballControls. Touch on tablet and phones is\n  // supported.\n  //\n  //    Orbit - left mouse / touch: one finger move\n  //    Zoom - middle mouse, or mousewheel / touch: two finger spread or squish\n  //    Pan - right mouse, or arrow keys / touch: three finter swipe\n\n  function OrbitControls ( object, domElement ) {\n\n    var constraint = new OrbitConstraint( object );\n\n    this.domElement = ( domElement !== undefined ) ? domElement : document;\n\n    // API\n\n    Object.defineProperty( this, 'constraint', {\n\n      get: function() {\n\n        return constraint;\n\n      }\n\n    } );\n\n    this.getPolarAngle = function () {\n\n      return constraint.getPolarAngle();\n\n    };\n\n    this.getAzimuthalAngle = function () {\n\n      return constraint.getAzimuthalAngle();\n\n    };\n\n    // Set to false to disable this control\n    this.enabled = true;\n\n    // center is old, deprecated; use \"target\" instead\n    this.center = this.target;\n\n    // This option actually enables dollying in and out; left as \"zoom\" for\n    // backwards compatibility.\n    // Set to false to disable zooming\n    this.enableZoom = true;\n    this.zoomSpeed = 1.0;\n\n    // Set to false to disable rotating\n    this.enableRotate = true;\n    this.rotateSpeed = 1.0;\n\n    // Set to false to disable panning\n    this.enablePan = true;\n    this.keyPanSpeed = 7.0;\t// pixels moved per arrow key push\n\n    // Set to true to automatically rotate around the target\n    // If auto-rotate is enabled, you must call controls.update() in your animation loop\n    this.autoRotate = false;\n    this.autoRotateSpeed = 2.0; // 30 seconds per round when fps is 60\n\n    // Set to false to disable use of the keys\n    this.enableKeys = true;\n\n    // The four arrow keys\n    this.keys = { LEFT: 37, UP: 38, RIGHT: 39, BOTTOM: 40 };\n\n    // Mouse buttons\n    this.mouseButtons = { ORBIT: THREE.MOUSE.LEFT, ZOOM: THREE.MOUSE.MIDDLE, PAN: THREE.MOUSE.RIGHT };\n\n    ////////////\n    // internals\n\n    var scope = this;\n\n    var rotateStart = new THREE.Vector2();\n    var rotateEnd = new THREE.Vector2();\n    var rotateDelta = new THREE.Vector2();\n\n    var panStart = new THREE.Vector2();\n    var panEnd = new THREE.Vector2();\n    var panDelta = new THREE.Vector2();\n\n    var dollyStart = new THREE.Vector2();\n    var dollyEnd = new THREE.Vector2();\n    var dollyDelta = new THREE.Vector2();\n\n    var STATE = { NONE : - 1, ROTATE : 0, DOLLY : 1, PAN : 2, TOUCH_ROTATE : 3, TOUCH_DOLLY : 4, TOUCH_PAN : 5 };\n\n    var state = STATE.NONE;\n\n    // for reset\n\n    this.target0 = this.target.clone();\n    this.position0 = this.object.position.clone();\n    this.zoom0 = this.object.zoom;\n\n    // events\n\n    var changeEvent = { type: 'change' };\n    var startEvent = { type: 'start' };\n    var endEvent = { type: 'end' };\n\n    // pass in x,y of change desired in pixel space,\n    // right and down are positive\n    function pan( deltaX, deltaY ) {\n\n      var element = scope.domElement === document ? scope.domElement.body : scope.domElement;\n\n      constraint.pan( deltaX, deltaY, element.clientWidth, element.clientHeight );\n\n    }\n\n    this.update = function () {\n\n      if ( this.autoRotate && state === STATE.NONE ) {\n\n        constraint.rotateLeft( getAutoRotationAngle() );\n\n      }\n\n      if ( constraint.update() === true ) {\n\n        this.dispatchEvent( changeEvent );\n\n      }\n\n    };\n\n    this.reset = function () {\n\n      state = STATE.NONE;\n\n      this.target.copy( this.target0 );\n      this.object.position.copy( this.position0 );\n      this.object.zoom = this.zoom0;\n\n      this.object.updateProjectionMatrix();\n      this.dispatchEvent( changeEvent );\n\n      this.update();\n\n    };\n\n    function getAutoRotationAngle() {\n\n      return 2 * Math.PI / 60 / 60 * scope.autoRotateSpeed;\n\n    }\n\n    function getZoomScale() {\n\n      return Math.pow( 0.95, scope.zoomSpeed );\n\n    }\n\n    function onMouseDown( event ) {\n\n      if ( scope.enabled === false ) return;\n\n      event.preventDefault();\n\n      if ( event.button === scope.mouseButtons.ORBIT ) {\n\n        if ( scope.enableRotate === false ) return;\n\n        state = STATE.ROTATE;\n\n        rotateStart.set( event.clientX, event.clientY );\n\n      } else if ( event.button === scope.mouseButtons.ZOOM ) {\n\n        if ( scope.enableZoom === false ) return;\n\n        state = STATE.DOLLY;\n\n        dollyStart.set( event.clientX, event.clientY );\n\n      } else if ( event.button === scope.mouseButtons.PAN ) {\n\n        if ( scope.enablePan === false ) return;\n\n        state = STATE.PAN;\n\n        panStart.set( event.clientX, event.clientY );\n\n      }\n\n      if ( state !== STATE.NONE ) {\n\n        document.addEventListener( 'mousemove', onMouseMove, false );\n        document.addEventListener( 'mouseup', onMouseUp, false );\n        scope.dispatchEvent( startEvent );\n\n      }\n\n    }\n\n    function onMouseMove( event ) {\n\n      if ( scope.enabled === false ) return;\n\n      event.preventDefault();\n\n      var element = scope.domElement === document ? scope.domElement.body : scope.domElement;\n\n      if ( state === STATE.ROTATE ) {\n\n        if ( scope.enableRotate === false ) return;\n\n        rotateEnd.set( event.clientX, event.clientY );\n        rotateDelta.subVectors( rotateEnd, rotateStart );\n\n        // rotating across whole screen goes 360 degrees around\n        constraint.rotateLeft( 2 * Math.PI * rotateDelta.x / element.clientWidth * scope.rotateSpeed );\n\n        // rotating up and down along whole screen attempts to go 360, but limited to 180\n        constraint.rotateUp( 2 * Math.PI * rotateDelta.y / element.clientHeight * scope.rotateSpeed );\n\n        rotateStart.copy( rotateEnd );\n\n      } else if ( state === STATE.DOLLY ) {\n\n        if ( scope.enableZoom === false ) return;\n\n        dollyEnd.set( event.clientX, event.clientY );\n        dollyDelta.subVectors( dollyEnd, dollyStart );\n\n        if ( dollyDelta.y > 0 ) {\n\n          constraint.dollyIn( getZoomScale() );\n\n        } else if ( dollyDelta.y < 0 ) {\n\n          constraint.dollyOut( getZoomScale() );\n\n        }\n\n        dollyStart.copy( dollyEnd );\n\n      } else if ( state === STATE.PAN ) {\n\n        if ( scope.enablePan === false ) return;\n\n        panEnd.set( event.clientX, event.clientY );\n        panDelta.subVectors( panEnd, panStart );\n\n        pan( panDelta.x, panDelta.y );\n\n        panStart.copy( panEnd );\n\n      }\n\n      if ( state !== STATE.NONE ) scope.update();\n\n    }\n\n    function onMouseUp( /* event */ ) {\n\n      if ( scope.enabled === false ) return;\n\n      document.removeEventListener( 'mousemove', onMouseMove, false );\n      document.removeEventListener( 'mouseup', onMouseUp, false );\n      scope.dispatchEvent( endEvent );\n      state = STATE.NONE;\n\n    }\n\n    function onMouseWheel( event ) {\n\n      if ( scope.enabled === false || scope.enableZoom === false || state !== STATE.NONE ) return;\n\n      event.preventDefault();\n      event.stopPropagation();\n\n      var delta = 0;\n\n      if ( event.wheelDelta !== undefined ) {\n\n        // WebKit / Opera / Explorer 9\n\n        delta = event.wheelDelta;\n\n      } else if ( event.detail !== undefined ) {\n\n        // Firefox\n\n        delta = - event.detail;\n\n      }\n\n      if ( delta > 0 ) {\n\n        constraint.dollyOut( getZoomScale() );\n\n      } else if ( delta < 0 ) {\n\n        constraint.dollyIn( getZoomScale() );\n\n      }\n\n      scope.update();\n      scope.dispatchEvent( startEvent );\n      scope.dispatchEvent( endEvent );\n\n    }\n\n    function onKeyDown( event ) {\n\n      if ( scope.enabled === false || scope.enableKeys === false || scope.enablePan === false ) return;\n\n      switch ( event.keyCode ) {\n\n        case scope.keys.UP:\n          pan( 0, scope.keyPanSpeed );\n          scope.update();\n          break;\n\n        case scope.keys.BOTTOM:\n          pan( 0, - scope.keyPanSpeed );\n          scope.update();\n          break;\n\n        case scope.keys.LEFT:\n          pan( scope.keyPanSpeed, 0 );\n          scope.update();\n          break;\n\n        case scope.keys.RIGHT:\n          pan( - scope.keyPanSpeed, 0 );\n          scope.update();\n          break;\n\n      }\n\n    }\n\n    function touchstart( event ) {\n\n      if ( scope.enabled === false ) return;\n\n      switch ( event.touches.length ) {\n\n        case 1:\t// one-fingered touch: rotate\n\n          if ( scope.enableRotate === false ) return;\n\n          state = STATE.TOUCH_ROTATE;\n\n          rotateStart.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n          break;\n\n        case 2:\t// two-fingered touch: dolly\n\n          if ( scope.enableZoom === false ) return;\n\n          state = STATE.TOUCH_DOLLY;\n\n          var dx = event.touches[ 0 ].pageX - event.touches[ 1 ].pageX;\n          var dy = event.touches[ 0 ].pageY - event.touches[ 1 ].pageY;\n          var distance = Math.sqrt( dx * dx + dy * dy );\n          dollyStart.set( 0, distance );\n          break;\n\n        case 3: // three-fingered touch: pan\n\n          if ( scope.enablePan === false ) return;\n\n          state = STATE.TOUCH_PAN;\n\n          panStart.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n          break;\n\n        default:\n\n          state = STATE.NONE;\n\n      }\n\n      if ( state !== STATE.NONE ) scope.dispatchEvent( startEvent );\n\n    }\n\n    function touchmove( event ) {\n\n      if ( scope.enabled === false ) return;\n\n      event.preventDefault();\n      event.stopPropagation();\n\n      var element = scope.domElement === document ? scope.domElement.body : scope.domElement;\n\n      switch ( event.touches.length ) {\n\n        case 1: // one-fingered touch: rotate\n\n          if ( scope.enableRotate === false ) return;\n          if ( state !== STATE.TOUCH_ROTATE ) return;\n\n          rotateEnd.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n          rotateDelta.subVectors( rotateEnd, rotateStart );\n\n          // rotating across whole screen goes 360 degrees around\n          constraint.rotateLeft( 2 * Math.PI * rotateDelta.x / element.clientWidth * scope.rotateSpeed );\n          // rotating up and down along whole screen attempts to go 360, but limited to 180\n          constraint.rotateUp( 2 * Math.PI * rotateDelta.y / element.clientHeight * scope.rotateSpeed );\n\n          rotateStart.copy( rotateEnd );\n\n          scope.update();\n          break;\n\n        case 2: // two-fingered touch: dolly\n\n          if ( scope.enableZoom === false ) return;\n          if ( state !== STATE.TOUCH_DOLLY ) return;\n\n          var dx = event.touches[ 0 ].pageX - event.touches[ 1 ].pageX;\n          var dy = event.touches[ 0 ].pageY - event.touches[ 1 ].pageY;\n          var distance = Math.sqrt( dx * dx + dy * dy );\n\n          dollyEnd.set( 0, distance );\n          dollyDelta.subVectors( dollyEnd, dollyStart );\n\n          if ( dollyDelta.y > 0 ) {\n\n            constraint.dollyOut( getZoomScale() );\n\n          } else if ( dollyDelta.y < 0 ) {\n\n            constraint.dollyIn( getZoomScale() );\n\n          }\n\n          dollyStart.copy( dollyEnd );\n\n          scope.update();\n          break;\n\n        case 3: // three-fingered touch: pan\n\n          if ( scope.enablePan === false ) return;\n          if ( state !== STATE.TOUCH_PAN ) return;\n\n          panEnd.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n          panDelta.subVectors( panEnd, panStart );\n\n          pan( panDelta.x, panDelta.y );\n\n          panStart.copy( panEnd );\n\n          scope.update();\n          break;\n\n        default:\n\n          state = STATE.NONE;\n\n      }\n\n    }\n\n    function touchend( /* event */ ) {\n\n      if ( scope.enabled === false ) return;\n\n      scope.dispatchEvent( endEvent );\n      state = STATE.NONE;\n\n    }\n\n    function contextmenu( event ) {\n\n      event.preventDefault();\n\n    }\n\n    this.dispose = function() {\n\n      this.domElement.removeEventListener( 'contextmenu', contextmenu, false );\n      this.domElement.removeEventListener( 'mousedown', onMouseDown, false );\n      this.domElement.removeEventListener( 'mousewheel', onMouseWheel, false );\n      this.domElement.removeEventListener( 'MozMousePixelScroll', onMouseWheel, false ); // firefox\n\n      this.domElement.removeEventListener( 'touchstart', touchstart, false );\n      this.domElement.removeEventListener( 'touchend', touchend, false );\n      this.domElement.removeEventListener( 'touchmove', touchmove, false );\n\n      document.removeEventListener( 'mousemove', onMouseMove, false );\n      document.removeEventListener( 'mouseup', onMouseUp, false );\n\n      window.removeEventListener( 'keydown', onKeyDown, false );\n\n    }\n\n    this.domElement.addEventListener( 'contextmenu', contextmenu, false );\n\n    this.domElement.addEventListener( 'mousedown', onMouseDown, false );\n    this.domElement.addEventListener( 'mousewheel', onMouseWheel, false );\n    this.domElement.addEventListener( 'MozMousePixelScroll', onMouseWheel, false ); // firefox\n\n    this.domElement.addEventListener( 'touchstart', touchstart, false );\n    this.domElement.addEventListener( 'touchend', touchend, false );\n    this.domElement.addEventListener( 'touchmove', touchmove, false );\n\n    window.addEventListener( 'keydown', onKeyDown, false );\n\n    // force an update at start\n    this.update();\n\n  };\n\n  OrbitControls.prototype = Object.create( THREE.EventDispatcher.prototype );\n  OrbitControls.prototype.constructor = OrbitControls;\n\n  Object.defineProperties( OrbitControls.prototype, {\n\n    object: {\n\n      get: function () {\n\n        return this.constraint.object;\n\n      }\n\n    },\n\n    target: {\n\n      get: function () {\n\n        return this.constraint.target;\n\n      },\n\n      set: function ( value ) {\n\n        console.warn( 'THREE.OrbitControls: target is now immutable. Use target.set() instead.' );\n        this.constraint.target.copy( value );\n\n      }\n\n    },\n\n    minDistance : {\n\n      get: function () {\n\n        return this.constraint.minDistance;\n\n      },\n\n      set: function ( value ) {\n\n        this.constraint.minDistance = value;\n\n      }\n\n    },\n\n    maxDistance : {\n\n      get: function () {\n\n        return this.constraint.maxDistance;\n\n      },\n\n      set: function ( value ) {\n\n        this.constraint.maxDistance = value;\n\n      }\n\n    },\n\n    minZoom : {\n\n      get: function () {\n\n        return this.constraint.minZoom;\n\n      },\n\n      set: function ( value ) {\n\n        this.constraint.minZoom = value;\n\n      }\n\n    },\n\n    maxZoom : {\n\n      get: function () {\n\n        return this.constraint.maxZoom;\n\n      },\n\n      set: function ( value ) {\n\n        this.constraint.maxZoom = value;\n\n      }\n\n    },\n\n    minPolarAngle : {\n\n      get: function () {\n\n        return this.constraint.minPolarAngle;\n\n      },\n\n      set: function ( value ) {\n\n        this.constraint.minPolarAngle = value;\n\n      }\n\n    },\n\n    maxPolarAngle : {\n\n      get: function () {\n\n        return this.constraint.maxPolarAngle;\n\n      },\n\n      set: function ( value ) {\n\n        this.constraint.maxPolarAngle = value;\n\n      }\n\n    },\n\n    minAzimuthAngle : {\n\n      get: function () {\n\n        return this.constraint.minAzimuthAngle;\n\n      },\n\n      set: function ( value ) {\n\n        this.constraint.minAzimuthAngle = value;\n\n      }\n\n    },\n\n    maxAzimuthAngle : {\n\n      get: function () {\n\n        return this.constraint.maxAzimuthAngle;\n\n      },\n\n      set: function ( value ) {\n\n        this.constraint.maxAzimuthAngle = value;\n\n      }\n\n    },\n\n    enableDamping : {\n\n      get: function () {\n\n        return this.constraint.enableDamping;\n\n      },\n\n      set: function ( value ) {\n\n        this.constraint.enableDamping = value;\n\n      }\n\n    },\n\n    dampingFactor : {\n\n      get: function () {\n\n        return this.constraint.dampingFactor;\n\n      },\n\n      set: function ( value ) {\n\n        this.constraint.dampingFactor = value;\n\n      }\n\n    },\n\n    // backward compatibility\n\n    noZoom: {\n\n      get: function () {\n\n        console.warn( 'THREE.OrbitControls: .noZoom has been deprecated. Use .enableZoom instead.' );\n        return ! this.enableZoom;\n\n      },\n\n      set: function ( value ) {\n\n        console.warn( 'THREE.OrbitControls: .noZoom has been deprecated. Use .enableZoom instead.' );\n        this.enableZoom = ! value;\n\n      }\n\n    },\n\n    noRotate: {\n\n      get: function () {\n\n        console.warn( 'THREE.OrbitControls: .noRotate has been deprecated. Use .enableRotate instead.' );\n        return ! this.enableRotate;\n\n      },\n\n      set: function ( value ) {\n\n        console.warn( 'THREE.OrbitControls: .noRotate has been deprecated. Use .enableRotate instead.' );\n        this.enableRotate = ! value;\n\n      }\n\n    },\n\n    noPan: {\n\n      get: function () {\n\n        console.warn( 'THREE.OrbitControls: .noPan has been deprecated. Use .enablePan instead.' );\n        return ! this.enablePan;\n\n      },\n\n      set: function ( value ) {\n\n        console.warn( 'THREE.OrbitControls: .noPan has been deprecated. Use .enablePan instead.' );\n        this.enablePan = ! value;\n\n      }\n\n    },\n\n    noKeys: {\n\n      get: function () {\n\n        console.warn( 'THREE.OrbitControls: .noKeys has been deprecated. Use .enableKeys instead.' );\n        return ! this.enableKeys;\n\n      },\n\n      set: function ( value ) {\n\n        console.warn( 'THREE.OrbitControls: .noKeys has been deprecated. Use .enableKeys instead.' );\n        this.enableKeys = ! value;\n\n      }\n\n    },\n\n    staticMoving : {\n\n      get: function () {\n\n        console.warn( 'THREE.OrbitControls: .staticMoving has been deprecated. Use .enableDamping instead.' );\n        return ! this.constraint.enableDamping;\n\n      },\n\n      set: function ( value ) {\n\n        console.warn( 'THREE.OrbitControls: .staticMoving has been deprecated. Use .enableDamping instead.' );\n        this.constraint.enableDamping = ! value;\n\n      }\n\n    },\n\n    dynamicDampingFactor : {\n\n      get: function () {\n\n        console.warn( 'THREE.OrbitControls: .dynamicDampingFactor has been renamed. Use .dampingFactor instead.' );\n        return this.constraint.dampingFactor;\n\n      },\n\n      set: function ( value ) {\n\n        console.warn( 'THREE.OrbitControls: .dynamicDampingFactor has been renamed. Use .dampingFactor instead.' );\n        this.constraint.dampingFactor = value;\n\n      }\n\n    }\n\n  } );\n\n  return OrbitControls;\n}\n","import TWEEN from 'tween.js';\n\n// This object contains the state of the app\nexport default {\n  isDev: false,\n  isShowingStats: true,\n  isLoaded: false,\n  isTweening: false,\n  isRotating: true,\n  isMouseMoving: false,\n  isMouseOver: false,\n  maxAnisotropy: 1,\n  dpr: 1,\n  easing: TWEEN.Easing.Quadratic.InOut,\n  duration: 500,\n  model: {\n    path: './assets/models/Teapot.json',\n    scale: 20\n  },\n  texture: {\n    path: './assets/textures/',\n    imageFiles: [\n      {name: 'UV', image: 'UV_Grid_Sm.jpg'},\n      {name: 'map', image: 'map.jpg'}\n    ]\n  },\n  mesh: {\n    enableHelper: false,\n    wireframe: false,\n    translucent: true,\n    material: {\n      color: 0xffffff,\n      emissive: 0xffffff\n    }\n  },\n  fog: {\n    color: 0xffffff,\n    near: 0.0008\n  },\n  camera: {\n    fov: 40,\n    near: 0.01,\n    far: 1000,\n    aspect: 1920/1080,\n    posX: 0,\n    posY: 16.5,\n    posZ: 100\n  },\n  controls: {\n    autoRotate: false,\n    autoRotateSpeed: -0.5,\n    rotateSpeed: 0.5,\n    zoomSpeed: 0.8,\n    minDistance: 200,\n    maxDistance: 600,\n    minPolarAngle: Math.PI / 5,\n    maxPolarAngle: Math.PI / 2,\n    minAzimuthAngle: -Infinity,\n    maxAzimuthAngle: Infinity,\n    enableDamping: true,\n    dampingFactor: 0.5,\n    enableZoom: true,\n    target: {\n      x: 0,\n      y: 0,\n      z: 0\n    }\n  },\n  ambientLight: {\n    enabled: true,\n    color: 0x141414\n  },\n  directionalLight: {\n    enabled: true,\n    color: 0xf0f0f0,\n    intensity: 0.7,\n    x: 93,\n    y: -87,\n    z: 274\n  },\n  shadow: {\n    enabled: true,\n    helperEnabled: false,\n    bias: 0,\n    mapWidth: 2048,\n    mapHeight: 2048,\n    near: 124,\n    far: 358,\n    top: 64,\n    right: 100,\n    bottom: 82,\n    left: -100\n  },\n  pointLight: {\n    enabled: false,\n    color: 0xffffff,\n    intensity: 0.34,\n    distance: 115,\n    x: -50,\n    y: 15,\n    z: 100\n  },\n  hemiLight: {\n    enabled: true,\n    color: 0xff3f3f,\n    groundColor: 0xffffff,\n    intensity: 0.55,\n    x: 0,\n    y: 0,\n    z: 0\n  }\n};\n","/**\n * @author alteredq / http://alteredqualia.com/\n * @author mr.doob / http://mrdoob.com/\n */\n\nexport default {\n  canvas: !!window.CanvasRenderingContext2D,\n  webgl: (function() {\n    try {\n      var canvas = document.createElement('canvas');\n\n      return !!(window.WebGLRenderingContext && (canvas.getContext('webgl') || canvas.getContext('experimental-webgl')));\n    } catch(e) {\n      return false;\n    }\n  })(),\n\n  workers: !!window.Worker,\n  fileapi: window.File && window.FileReader && window.FileList && window.Blob,\n\n  getWebGLErrorMessage: function() {\n    var element = document.createElement('div');\n    element.id = 'webgl-error-message';\n    element.style.fontFamily = 'monospace';\n    element.style.fontSize = '13px';\n    element.style.fontWeight = 'normal';\n    element.style.textAlign = 'center';\n    element.style.background = '#fff';\n    element.style.color = '#000';\n    element.style.padding = '1.5em';\n    element.style.width = '400px';\n    element.style.margin = '5em auto 0';\n\n    if(!this.webgl) {\n      element.innerHTML = window.WebGLRenderingContext ? [\n        'Your graphics card does not seem to support <a href=\"http://khronos.org/webgl/wiki/Getting_a_WebGL_Implementation\" style=\"color:#000000\">WebGL</a>.<br />',\n        'Find out how to get it <a href=\"http://get.webgl.org/\" style=\"color:#000000\">here</a>.'\n      ].join('\\n') : [\n        'Your browser does not seem to support <a href=\"http://khronos.org/webgl/wiki/Getting_a_WebGL_Implementation\" style=\"color:#000000\">WebGL</a>.<br/>',\n        'Find out how to get it <a href=\"http://get.webgl.org/\" style=\"color:#000000\">here</a>.'\n      ].join('\\n');\n    }\n\n    return element;\n  },\n\n  addGetWebGLMessage: function(parameters) {\n    var parent, id, element;\n\n    parameters = parameters || {};\n\n    parent = parameters.parent !== undefined ? parameters.parent : document.body;\n    id = parameters.id !== undefined ? parameters.id : 'oldie';\n\n    element = this.getWebGLErrorMessage();\n    element.id = id;\n\n    parent.appendChild(element);\n  }\n};\n","import * as THREE from 'three';\n\nimport Config from '../../data/config';\n\n// Main webGL renderer class\nexport default class Renderer {\n  constructor(scene, container) {\n    // Properties\n    this.scene = scene;\n    this.container = container;\n\n    // Create WebGL renderer and set its antialias\n    this.threeRenderer = new THREE.WebGLRenderer({antialias: true,alpha:true});\n\n    // Set clear color to fog to enable fog or to hex color for no fog\n    //this.threeRenderer.setClearColor(scene.fog.color);\n    this.threeRenderer.setClearColor( 0x000000, 0 ); // the default\n    this.threeRenderer.setPixelRatio(window.devicePixelRatio); // For retina\n    // Appends canvas\n    container.appendChild(this.threeRenderer.domElement);\n\n    // Shadow map options\n    this.threeRenderer.shadowMap.enabled = true;\n    //this.threeRenderer.shadowMap.type = THREE.PCFSoftShadowMap;\n\n    // Get anisotropy for textures\n    Config.maxAnisotropy = this.threeRenderer.getMaxAnisotropy();\n\n    // Initial size update set to canvas container\n    this.updateSize();\n\n    // Listeners\n    document.addEventListener('DOMContentLoaded', () => this.updateSize(), false);\n    window.addEventListener('resize', () => this.updateSize(), false);\n  }\n\n  updateSize() {\n    this.threeRenderer.setSize(this.container.offsetWidth, this.container.offsetHeight);\n  }\n\n  render(scene, camera) {\n    // Renders scene to canvas target\n    this.threeRenderer.render(scene, camera);\n  }\n}\n","import * as THREE from 'three';\n\nimport Config from '../../data/config';\n\n// Class that creates and updates the main camera\nexport default class Camera {\n  constructor(renderer) {\n    const width = renderer.domElement.width;\n    const height = renderer.domElement.height;\n\n    // Create and position a Perspective Camera\n    this.threeCamera = new THREE.PerspectiveCamera(Config.camera.fov, width / height, Config.camera.near, Config.camera.far);\n    this.threeCamera.position.set(Config.camera.posX, Config.camera.posY, Config.camera.posZ);\n\n    // Initial sizing\n    this.updateSize(renderer);\n    \n    // Listeners\n    window.addEventListener('resize', () => this.updateSize(renderer), false);\n  }\n\n  updateSize(renderer) {\n    // Update camera aspect ratio with window aspect ratio\n    this.threeCamera.aspect = renderer.domElement.width / renderer.domElement.height;\n\n    // Always call updateProjectionMatrix on camera change\n    this.threeCamera.updateProjectionMatrix();\n  }\n}\n","import * as THREE from 'three';\r\n\r\nimport Config from '../../data/config';\r\n\r\n// Sets up and places all lights in scene\r\nexport default class Light {\r\n  constructor(scene) {\r\n    this.scene = scene;\r\n\r\n    this.init();\r\n  }\r\n\r\n  init() {\r\n    // Ambient\r\n    this.ambientLight = new THREE.AmbientLight(Config.ambientLight.color);\r\n    this.ambientLight.visible = Config.ambientLight.enabled;\r\n\r\n    // Point light\r\n    this.pointLight = new THREE.PointLight(Config.pointLight.color, Config.pointLight.intensity, Config.pointLight.distance);\r\n    this.pointLight.position.set(Config.pointLight.x, Config.pointLight.y, Config.pointLight.z);\r\n    this.pointLight.visible = Config.pointLight.enabled;\r\n\r\n    // Directional light\r\n    this.directionalLight = new THREE.DirectionalLight(Config.directionalLight.color, Config.directionalLight.intensity);\r\n    this.directionalLight.position.set(Config.directionalLight.x, Config.directionalLight.y, Config.directionalLight.z);\r\n    this.directionalLight.visible = Config.directionalLight.enabled;\r\n\r\n    // Shadow map\r\n    this.directionalLight.castShadow = Config.shadow.enabled;\r\n    this.directionalLight.shadow.bias = Config.shadow.bias;\r\n    this.directionalLight.shadow.camera.near = Config.shadow.near;\r\n    this.directionalLight.shadow.camera.far = Config.shadow.far;\r\n    this.directionalLight.shadow.camera.left = Config.shadow.left;\r\n    this.directionalLight.shadow.camera.right = Config.shadow.right;\r\n    this.directionalLight.shadow.camera.top = Config.shadow.top;\r\n    this.directionalLight.shadow.camera.bottom = Config.shadow.bottom;\r\n    this.directionalLight.shadow.mapSize.width = Config.shadow.mapWidth;\r\n    this.directionalLight.shadow.mapSize.height = Config.shadow.mapHeight;\r\n\r\n    // Shadow camera helper\r\n    this.directionalLightHelper = new THREE.CameraHelper(this.directionalLight.shadow.camera);\r\n    this.directionalLightHelper.visible = Config.shadow.helperEnabled;\r\n\r\n    // Hemisphere light\r\n    this.hemiLight = new THREE.HemisphereLight(Config.hemiLight.color, Config.hemiLight.groundColor, Config.hemiLight.intensity);\r\n    this.hemiLight.position.set(Config.hemiLight.x, Config.hemiLight.y, Config.hemiLight.z);\r\n    this.hemiLight.visible = Config.hemiLight.enabled;\r\n  }\r\n\r\n  place(lightName) {\r\n    switch(lightName) {\r\n      case 'ambient':\r\n        this.scene.add(this.ambientLight);\r\n        break;\r\n\r\n      case 'directional':\r\n        this.scene.add(this.directionalLight);\r\n        this.scene.add(this.directionalLightHelper);\r\n        break;\r\n\r\n      case 'point':\r\n        this.scene.add(this.pointLight);\r\n        break;\r\n\r\n      case 'hemi':\r\n        this.scene.add(this.hemiLight);\r\n        break;\r\n    }\r\n  }\r\n}\r\n","import * as THREE from 'three';\n\nimport OrbitControls from '../../utils/orbitControls';\nimport Config from '../../data/config';\n\n// Controls based on orbit controls\nexport default class Controls {\n  constructor(camera, container) {\n    // Orbit controls first needs to pass in THREE to constructor\n    const orbitControls = new OrbitControls(THREE);\n    this.threeControls = new orbitControls(camera, container);\n\n    this.init();\n  }\n\n  init() {\n    this.threeControls.target.set(Config.controls.target.x, Config.controls.target.y, Config.controls.target.z);\n    this.threeControls.autoRotate = false;\n    this.threeControls.autoRotateSpeed = Config.controls.autoRotateSpeed;\n    this.threeControls.rotateSpeed = Config.controls.rotateSpeed;\n    this.threeControls.zoomSpeed = Config.controls.zoomSpeed;\n    this.threeControls.minDistance = Config.controls.minDistance;\n    this.threeControls.maxDistance = Config.controls.maxDistance;\n    this.threeControls.minPolarAngle = Config.controls.minPolarAngle;\n    this.threeControls.maxPolarAngle = Config.controls.maxPolarAngle;\n    this.threeControls.enableDamping = Config.controls.enableDamping;\n    this.threeControls.enableZoom = Config.controls.enableZoom;\n    this.threeControls.dampingFactor = Config.controls.dampingFactor;\n  }\n}\n","import * as THREE from 'three';\n\nimport Config from '../../data/config';\n\n// USe this class as a helper to set up some default materials\nexport default class Material {\n  constructor(color, opacity) {\n    if(typeof opacity === null) opacity = 1.0\n    this.basic = new THREE.MeshBasicMaterial({\n      color,\n      side: THREE.DoubleSide\n    });\n\n    this.standard = new THREE.MeshStandardMaterial({\n      color,\n      flatShading: false,\n      roughness: 1,\n      metalness: 0,\n      side: THREE.DoubleSide\n    });\n\n    this.plane = new THREE.MeshToonMaterial({\n      color,\n      opacity,\n      flatShading: true,\n      side: THREE.DoubleSide,\n      depthWrite: false,\n      transparent: true,\n    });\n    this.map = new THREE.MeshBasicMaterial({\n\n    })\n\n    this.wire = new THREE.MeshBasicMaterial({wireframe: true});\n  }\n}\n\n","// Local vars for rStats\nlet rS, bS, glS, tS;\n\nexport default class Stats {\n  constructor(renderer) {\n    this.renderer = renderer;\n  }\n\n  setUp() {\n    bS = new BrowserStats();\n    //glS = new glStats();\n  //  tS = new threeStats(this.renderer.threeRenderer);\n\n    rS = new rStats({\n      CSSPath: './css/',\n      userTimingAPI: true,\n      values: {\n        frame: { caption: 'Total frame time (ms)', over: 16, average: true, avgMs: 100 },\n        fps: { caption: 'Framerate (FPS)', below: 30 },\n        calls: { caption: 'Calls (three.js)', over: 3000 },\n        raf: { caption: 'Time since last rAF (ms)', average: true, avgMs: 100 },\n        rstats: { caption: 'rStats update (ms)', average: true, avgMs: 100 },\n        texture: { caption: 'GenTex', average: true, avgMs: 100 }\n      },\n      groups: [\n        { caption: 'Framerate', values: ['fps', 'raf'] },\n        { caption: 'Frame Budget', values: ['frame', 'texture', 'setup', 'render'] }\n      ],\n      fractions: [\n        { base: 'frame', steps: ['texture', 'setup', 'render'] }\n      ],\n      plugins: [bS]//glS]\n    });\n  };\n\n  static start() {\n    rS('frame').start();\n   // glS.start();\n\n    rS('rAF').tick();\n    rS('FPS').frame();\n\n    rS('render').start();\n  };\n\n  static end() {\n    rS('render').end(); // render finished\n    rS('frame').end(); // frame finished\n\n    // Local rStats update\n    rS('rStats').start();\n    rS().update();\n    rS('rStats').end();\n  };\n}\n","import * as THREE from 'three';\n\nimport Material from './material';\n\nimport Config from '../../data/config';\n\n// This helper class can be used to create and then place geometry in the scene\nexport default class Geometry {\n  constructor(scene, textures) {\n    this.scene = scene;\n    this.geo = null;\n    this.type = null;\n    this.cube = null;\n    this.plane = null;\n    this.map = null;\n    this.textures = textures;\n  }\n\n  make(type) {\n    if(type === 'plane') {\n      this.type = type;\n      return (width, height, widthSegments = 1, heightSegments = 1) => {\n        this.geo = new THREE.PlaneGeometry(width, height, widthSegments, heightSegments);\n      };\n    }\n    if(type === 'map') {\n      this.type = type;\n      return (width, height, widthSegments = 1, heightSegments = 1) => {\n        this.geo = new THREE.PlaneGeometry(width, height, widthSegments, heightSegments);\n      };\n    }\n    if(type === 'sphere') {\n      this.type = type;\n      return (radius, widthSegments = 32, heightSegments = 32) => {\n        this.geo = new THREE.SphereGeometry(radius, widthSegments, heightSegments);\n      };\n    }\n    if(type === 'cube') {\n      this.type = type;\n      return (width, height,depth) => {\n        this.geo = new THREE.BoxGeometry( width,height, depth);\n      };\n    }\n    if(type === 'node'){\n      this.type = type;\n      return ( radius ) => {\n        this.geo = new THREE.CylinderGeometry( radius, radius, 4, 32 );\n      };\n    }\n  }\n\n  place(position, rotation,texture) {\n    console.log(texture);\n    let material = new Material(0x000000,0.3).standard;\n    if(this.type == 'plane'){\n      material = new Material(0x000000,0.6).plane;\n     // material = new Material(0xffffff,1).plane;\n   }\n   if(this.type == 'cube'){\n    material = new Material(0x17f7ae,0.3).standard;\n  }\n  if(this.type == 'node'){\n    material = new Material(0x17a7ae,0.3).standard;\n  }\n  if(this.type == 'map'){\n    material = new Material(0x000000,null).map;\n    material.map = this.textures.map;\n  }\n  const mesh = new THREE.Mesh(this.geo, material);\nswitch(this.type){\n  case 'cube': this.cube = mesh; break;\n  case 'map': this.map = mesh; break;\n  case 'plane': this.plane = mesh; break;\n}\n  console.log(mesh);\n    // Use ES6 spread to set position and rotation from passed in array\n    mesh.position.set(...position);\n    mesh.rotation.set(...rotation);\n\n    if(Config.shadow.enabled) {\n      mesh.receiveShadow = true;\n      mesh.castShadow = true;\n    }\n\n    this.scene.add(mesh);\n  }\n}\n","// Provides simple static functions that are used multiple times in the app\nexport default class Helpers {\n  static throttle(fn, threshhold, scope) {\n    threshhold || (threshhold = 250);\n    let last, deferTimer;\n\n    return function() {\n      const context = scope || this;\n\n      const now  = +new Date,\n          args = arguments;\n\n      if(last && now < last + threshhold) {\n        clearTimeout(deferTimer);\n        deferTimer = setTimeout(function() {\n          last = now;\n          fn.apply(context, args);\n        }, threshhold);\n      }\n      else {\n        last = now;\n        fn.apply(context, args);\n      }\n    };\n  }\n\n  static logProgress() {\n    return function(xhr) {\n      if(xhr.lengthComputable) {\n        const percentComplete = xhr.loaded / xhr.total * 100;\n\n        console.log(Math.round(percentComplete, 2) + '% downloaded');\n      }\n    }\n  }\n\n  static logError() {\n    return function(xhr) {\n      console.error(xhr);\n    }\n  }\n\n  static handleColorChange(color) {\n    return (value) => {\n      if(typeof value === 'string') {\n        value = value.replace('#', '0x');\n      }\n\n      color.setHex(value);\n    };\n  }\n\n  static update(mesh) {\n    this.needsUpdate(mesh.material, mesh.geometry);\n  }\n\n  static needsUpdate(material, geometry) {\n    return function() {\n      material.shading = +material.shading; //Ensure number\n      material.vertexColors = +material.vertexColors; //Ensure number\n      material.side = +material.side; //Ensure number\n      material.needsUpdate = true;\n      geometry.verticesNeedUpdate = true;\n      geometry.normalsNeedUpdate = true;\n      geometry.colorsNeedUpdate = true;\n    };\n  }\n\n  static updateTexture(material, materialKey, textures) {\n    return function(key) {\n      material[materialKey] = textures[key];\n      material.needsUpdate = true;\n    };\n  }\n}\n","import * as THREE from 'three';\r\n// Promise polyfill for IE\r\nimport { Promise } from 'es6-promise';\r\n\r\nimport Helpers from '../../utils/helpers';\r\nimport Config from '../../data/config';\r\n\r\n// This class preloads all textures in the imageFiles array in the Config via ES6 Promises.\r\n// Once all textures are done loading the model itself will be loaded after the Promise .then() callback.\r\n// Using promises to preload textures prevents issues when applying textures to materials\r\n// before the textures have loaded.\r\nexport default class Texture {\r\n  constructor() {\r\n    // Prop that will contain all loaded textures\r\n    this.textures = {};\r\n  }\r\n\r\n  load() {\r\n    const loader = new THREE.TextureLoader();\r\n    const maxAnisotropy = Config.maxAnisotropy;\r\n    const imageFiles = Config.texture.imageFiles;\r\n    const promiseArray = [];\r\n\r\n    loader.setPath(Config.texture.path);\r\n\r\n    imageFiles.forEach(imageFile => {\r\n      // Add an individual Promise for each image in array\r\n      promiseArray.push(new Promise((resolve, reject) => {\r\n        // Each Promise will attempt to load the image file\r\n        loader.load(imageFile.image,\r\n          // This gets called on load with the loaded texture\r\n          texture => {\r\n            texture.anisotropy = maxAnisotropy;\r\n\r\n            // Resolve Promise with object of texture if it is instance of THREE.Texture\r\n            const modelOBJ = {};\r\n            modelOBJ[imageFile.name] = texture;\r\n            if(modelOBJ[imageFile.name] instanceof THREE.Texture)\r\n              resolve(modelOBJ);\r\n          },\r\n          Helpers.logProgress(),\r\n          xhr => reject(new Error(xhr + 'An error occurred loading while loading ' + imageFile.image))\r\n        )\r\n      }));\r\n    });\r\n\r\n    // Iterate through all Promises in array and return another Promise when all have resolved or console log reason when any reject\r\n    return Promise.all(promiseArray).then(textures => {\r\n      // Set the textures prop object to have name be the resolved texture\r\n      for(let i = 0; i < textures.length; i++) {\r\n        this.textures[Object.keys(textures[i])[0]] = textures[i][Object.keys(textures[i])[0]];\r\n      }\r\n    }, reason => console.log(reason));\r\n  }\r\n}\r\n","import * as THREE from 'three';\n\n// Simple mesh helper that shows edges, wireframes, and face and vertex normals\nexport default class MeshHelper {\n  constructor(scene, mesh) {\n    const wireframe = new THREE.WireframeGeometry(mesh.geometry);\n    const wireLine = new THREE.LineSegments(wireframe);\n    wireLine.material.depthTest = false;\n    wireLine.material.opacity = 0.25;\n    wireLine.material.transparent = true;\n    mesh.add(wireLine);\n\n    const edges = new THREE.EdgesGeometry(mesh.geometry);\n    const edgesLine = new THREE.LineSegments(edges);\n    edgesLine.material.depthTest = false;\n    edgesLine.material.opacity = 0.25;\n    edgesLine.material.transparent = true;\n    mesh.add(edgesLine);\n\n    scene.add(new THREE.BoxHelper(mesh));\n    scene.add(new THREE.FaceNormalsHelper(mesh, 2));\n    scene.add(new THREE.VertexNormalsHelper(mesh, 2));\n  }\n}\n","import * as THREE from 'three';\r\n\r\nimport Material from '../helpers/material';\r\nimport MeshHelper from '../helpers/meshHelper';\r\nimport Helpers from '../../utils/helpers';\r\nimport Config from '../../data/config';\r\n\r\n// Loads in a single object from the config file\r\nexport default class Model {\r\n  constructor(scene, manager, textures) {\r\n    this.scene = scene;\r\n    this.textures = textures;\r\n\r\n    // Manager is passed in to loader to determine when loading done in main\r\n    this.loader = new THREE.ObjectLoader(manager);\r\n    this.obj = null;\r\n  }\r\n\r\n  load() {\r\n    // Load model with ObjectLoader\r\n    this.loader.load(\r\n      Config.model.path,\r\n      obj => {\r\n        obj.traverse(child => {\r\n          if(child instanceof THREE.Mesh) {\r\n            // Create material for mesh and set its map to texture by name from preloaded textures\r\n            const material = new Material(0xffffff).standard;\r\n            material.map = this.textures.UV;\r\n            child.material = material;\r\n\r\n            // Set to cast and receive shadow if enabled\r\n            if(Config.shadow.enabled) {\r\n              child.receiveShadow = true;\r\n              child.castShadow = true;\r\n            }\r\n          }\r\n        });\r\n\r\n        // Add mesh helper if Dev\r\n        if(Config.isDev && Config.mesh.enableHelper) {\r\n          new MeshHelper(this.scene, obj);\r\n        }\r\n\r\n        // Set prop to obj so it can be accessed from outside the class\r\n        this.obj = obj;\r\n\r\n        obj.scale.multiplyScalar(Config.model.scale);\r\n       // this.scene.add(obj);\r\n      },\r\n      Helpers.logProgress(),\r\n      Helpers.logError()\r\n    );\r\n  }\r\n}\r\n","const ALIAS = {\n  'left'\t\t: 37,\n  'up'\t\t  : 38,\n  'right'\t\t: 39,\n  'down'\t\t: 40,\n  'space'\t\t: 32,\n  'tab'\t\t  : 9,\n  'escape'\t: 27\n};\n\nexport default class Keyboard {\n  constructor(domElement) {\n    this.domElement = domElement || document;\n    this.keyCodes = {};\n\n    // bind keyEvents\n    this.domElement.addEventListener('keydown', (event) => this.onKeyChange(event), false);\n    this.domElement.addEventListener('keyup', (event) => this.onKeyChange(event), false);\n\n    // bind window blur\n    window.addEventListener('blur', () => this.onBlur, false);\n  }\n\n  destroy() {\n    this.domElement.removeEventListener('keydown', (event) => this.onKeyChange(event), false);\n    this.domElement.removeEventListener('keyup', (event) => this.onKeyChange(event), false);\n\n    // unbind window blur event\n    window.removeEventListener('blur', () => this.onBlur, false);\n  }\n\n  onBlur() {\n    for(const prop in this.keyCodes)\n      this.keyCodes[prop] = false;\n  }\n\n  onKeyChange(event) {\n    // log to debug\n    //console.log('onKeyChange', event, event.keyCode, event.shiftKey, event.ctrlKey, event.altKey, event.metaKey)\n\n    // update this.keyCodes\n    const keyCode = event.keyCode;\n    this.keyCodes[keyCode] = event.type === 'keydown';\n  }\n\n  pressed(keyDesc) {\n    const keys = keyDesc.split('+');\n    for(let i = 0; i < keys.length; i++) {\n      const key = keys[i];\n      let pressed = false;\n      if(Object.keys(ALIAS).indexOf(key) != -1) {\n        pressed = this.keyCodes[ALIAS[key]];\n      } else {\n        pressed = this.keyCodes[key.toUpperCase().charCodeAt(0)];\n      }\n      if(!pressed)\n        return false;\n    }\n\n    return true;\n  }\n\n  eventMatches(event, keyDesc) {\n    const aliases = ALIAS;\n    const aliasKeys = Object.keys(aliases);\n    const keys = keyDesc.split('+');\n    // log to debug\n    // console.log('eventMatches', event, event.keyCode, event.shiftKey, event.ctrlKey, event.altKey, event.metaKey)\n    for(let i = 0; i < keys.length; i++) {\n      const key = keys[i];\n      let pressed = false;\n      if(key === 'shift') {\n        pressed = event.shiftKey ? true : false;\n      } else if(key === 'ctrl') {\n        pressed = event.ctrlKey ? true : false;\n      } else if(key === 'alt') {\n        pressed = event.altKey ? true : false;\n      } else if(key === 'meta') {\n        pressed = event.metaKey ? true : false;\n      } else if(aliasKeys.indexOf(key) !== -1) {\n        pressed = event.keyCode === aliases[key];\n      } else if(event.keyCode === key.toUpperCase().charCodeAt(0)) {\n        pressed = true;\n      }\n      if(!pressed)\n        return false;\n    }\n\n    return true;\n  }\n}\n","import Keyboard from '../../utils/keyboard';\r\nimport Helpers from '../../utils/helpers';\r\nimport Config from '../../data/config';\r\n\r\n// Manages all input interactions\r\nexport default class Interaction {\r\n  constructor(renderer, scene, camera, controls) {\r\n    // Properties\r\n    this.renderer = renderer;\r\n    this.scene = scene;\r\n    this.camera = camera;\r\n    this.controls = controls;\r\n\r\n    this.timeout = null;\r\n\r\n    // Instantiate keyboard helper\r\n    this.keyboard = new Keyboard();\r\n\r\n    // Listeners\r\n    // Mouse events\r\n    this.renderer.domElement.addEventListener('mousemove', (event) => Helpers.throttle(this.onMouseMove(event), 250), false);\r\n    this.renderer.domElement.addEventListener('mouseleave', (event) => this.onMouseLeave(event), false);\r\n    this.renderer.domElement.addEventListener('mouseover', (event) => this.onMouseOver(event), false);\r\n\r\n    // Keyboard events\r\n    this.keyboard.domElement.addEventListener('keydown', (event) => {\r\n      // Only once\r\n      if(event.repeat) {\r\n        return;\r\n      }\r\n\r\n      if(this.keyboard.eventMatches(event, 'escape')) {\r\n        console.log('Escape pressed');\r\n      }\r\n    });\r\n  }\r\n\r\n  onMouseOver(event) {\r\n    event.preventDefault();\r\n\r\n    Config.isMouseOver = true;\r\n  }\r\n\r\n  onMouseLeave(event) {\r\n    event.preventDefault();\r\n\r\n    Config.isMouseOver = false;\r\n  }\r\n\r\n  onMouseMove(event) {\r\n    event.preventDefault();\r\n\r\n    clearTimeout(this.timeout);\r\n\r\n    this.timeout = setTimeout(function() {\r\n      Config.isMouseMoving = false;\r\n    }, 200);\r\n\r\n    Config.isMouseMoving = true;\r\n  }\r\n}\r\n","import Config from '../../data/config';\n\n// Manages all dat.GUI interactions\nexport default class DatGUI {\n  constructor(main, mesh) {\n    const gui = new dat.GUI();\n\n    this.camera = main.camera.threeCamera;\n    this.controls = main.controls.threeControls;\n    this.light = main.light;\n\n    /* Global */\n    //gui.close();\n\n    /* Camera */\n    const cameraFolder = gui.addFolder('Camera');\n    const cameraFOVGui = cameraFolder.add(Config.camera, 'fov', 0, 180).name('Camera FOV');\n    cameraFOVGui.onChange((value) => {\n      this.controls.enableRotate = false;\n\n      this.camera.fov = value;\n    });\n    cameraFOVGui.onFinishChange(() => {\n      this.camera.updateProjectionMatrix();\n\n      this.controls.enableRotate = true;\n    });\n    const cameraAspectGui = cameraFolder.add(Config.camera, 'aspect', 0, 4).name('Camera Aspect');\n    cameraAspectGui.onChange((value) => {\n      this.controls.enableRotate = false;\n\n      this.camera.aspect = value;\n    });\n    cameraAspectGui.onFinishChange(() => {\n      this.camera.updateProjectionMatrix();\n\n      this.controls.enableRotate = true;\n    });\n    const cameraFogColorGui = cameraFolder.addColor(Config.fog, 'color').name('Fog Color');\n    cameraFogColorGui.onChange((value) => {\n      main.scene.fog.color.setHex(value);\n    });\n    const cameraFogNearGui = cameraFolder.add(Config.fog, 'near', 0.000, 0.010).name('Fog Near');\n    cameraFogNearGui.onChange((value) => {\n      this.controls.enableRotate = false;\n\n      main.scene.fog.density = value;\n    });\n    cameraFogNearGui.onFinishChange(() => {\n      this.controls.enableRotate = true;\n    });\n\n\n    /* Controls */\n    const controlsFolder = gui.addFolder('Controls');\n    controlsFolder.add(Config.controls, 'autoRotate').name('Auto Rotate').onChange((value) => {\n      this.controls.autoRotate = value;\n    });\n    const controlsAutoRotateSpeedGui = controlsFolder.add(Config.controls, 'autoRotateSpeed', -1, 1).name('Rotation Speed');\n    controlsAutoRotateSpeedGui.onChange((value) => {\n      this.controls.enableRotate = false;\n      this.controls.autoRotateSpeed = value;\n    });\n    controlsAutoRotateSpeedGui.onFinishChange(() => {\n      this.controls.enableRotate = true;\n    });\n\n\n    /* Mesh */\n     const meshFolder = gui.addFolder('Mesh');\n     meshFolder.add(Config.mesh, 'translucent', true).name('Translucent').onChange((value) => {\n       if(value) {\n         mesh.material.transparent = true;\n         mesh.material.opacity = 0.5;\n       } else {\n         mesh.material.opacity = 1.0;\n       }\n     });\n     meshFolder.add(Config.mesh, 'wireframe', true).name('Wireframe').onChange((value) => {\n       mesh.material.wireframe = value;\n     });\n\n\n    /* Lights */\n    // Ambient Light\n    const ambientLightFolder = gui.addFolder('Ambient Light');\n    ambientLightFolder.add(Config.ambientLight, 'enabled').name('Enabled').onChange((value) => {\n      this.light.ambientLight.visible = value;\n    });\n    ambientLightFolder.addColor(Config.ambientLight, 'color').name('Color').onChange((value) => {\n      this.light.ambientLight.color.setHex(value);\n    });\n\n\n  //   // Directional Light\n    const directionalLightFolder = gui.addFolder('Directional Light');\n    directionalLightFolder.add(Config.directionalLight, 'enabled').name('Enabled').onChange((value) => {\n      this.light.directionalLight.visible = value;\n    });\n    directionalLightFolder.addColor(Config.directionalLight, 'color').name('Color').onChange((value) => {\n      this.light.directionalLight.color.setHex(value);\n    });\n    const directionalLightIntensityGui = directionalLightFolder.add(Config.directionalLight, 'intensity', 0, 2).name('Intensity');\n    directionalLightIntensityGui.onChange((value) => {\n      this.controls.enableRotate = false;\n\n      this.light.directionalLight.intensity = value;\n    });\n    directionalLightIntensityGui.onFinishChange(() => {\n      this.controls.enableRotate = true;\n    });\n    const directionalLightPositionXGui = directionalLightFolder.add(Config.directionalLight, 'x', -1000, 1000).name('Position X');\n    directionalLightPositionXGui.onChange((value) => {\n      this.controls.enableRotate = false;\n\n      this.light.directionalLight.position.x = value;\n    });\n    directionalLightPositionXGui.onFinishChange(() => {\n      this.controls.enableRotate = true;\n    });\n    const directionalLightPositionYGui = directionalLightFolder.add(Config.directionalLight, 'y', -1000, 1000).name('Position Y');\n    directionalLightPositionYGui.onChange((value) => {\n      this.controls.enableRotate = false;\n\n      this.light.directionalLight.position.y = value;\n    });\n    directionalLightPositionYGui.onFinishChange(() => {\n      this.controls.enableRotate = true;\n    });\n    const directionalLightPositionZGui = directionalLightFolder.add(Config.directionalLight, 'z', -1000, 1000).name('Position Z');\n    directionalLightPositionZGui.onChange((value) => {\n      this.controls.enableRotate = false;\n\n      this.light.directionalLight.position.z = value;\n    });\n    directionalLightPositionZGui.onFinishChange(() => {\n      this.controls.enableRotate = true;\n    });\n\n    // Shadow Map\n    const shadowFolder = gui.addFolder('Shadow Map');\n    shadowFolder.add(Config.shadow, 'enabled').name('Enabled').onChange((value) => {\n      this.light.directionalLight.castShadow = value;\n    });\n    shadowFolder.add(Config.shadow, 'helperEnabled').name('Helper Enabled').onChange((value) => {\n      this.light.directionalLightHelper.visible = value;\n    });\n    const shadowNearGui = shadowFolder.add(Config.shadow, 'near', 0, 400).name('Near');\n    shadowNearGui.onChange((value) => {\n      this.controls.enableRotate = false;\n\n      this.light.directionalLight.shadow.camera.near = value;\n    });\n    shadowNearGui.onFinishChange(() => {\n      this.controls.enableRotate = true;\n      this.light.directionalLight.shadow.map.dispose();\n      this.light.directionalLight.shadow.map = null;\n      this.light.directionalLightHelper.update();\n    });\n    const shadowFarGui = shadowFolder.add(Config.shadow, 'far', 0, 1200).name('Far');\n    shadowFarGui.onChange((value) => {\n      this.controls.enableRotate = false;\n\n      this.light.directionalLight.shadow.camera.far = value;\n    });\n    shadowFarGui.onFinishChange(() => {\n      this.controls.enableRotate = true;\n      this.light.directionalLight.shadow.map.dispose();\n      this.light.directionalLight.shadow.map = null;\n      this.light.directionalLightHelper.update();\n    });\n    const shadowTopGui = shadowFolder.add(Config.shadow, 'top', -400, 400).name('Top');\n    shadowTopGui.onChange((value) => {\n      this.controls.enableRotate = false;\n\n      this.light.directionalLight.shadow.camera.top = value;\n    });\n    shadowTopGui.onFinishChange(() => {\n      this.controls.enableRotate = true;\n      this.light.directionalLight.shadow.map.dispose();\n      this.light.directionalLight.shadow.map = null;\n      this.light.directionalLightHelper.update();\n    });\n    const shadowRightGui = shadowFolder.add(Config.shadow, 'right', -400, 400).name('Right');\n    shadowRightGui.onChange((value) => {\n      this.controls.enableRotate = false;\n\n      this.light.directionalLight.shadow.camera.right = value;\n    });\n    shadowRightGui.onFinishChange(() => {\n      this.controls.enableRotate = true;\n      this.light.directionalLight.shadow.map.dispose();\n      this.light.directionalLight.shadow.map = null;\n      this.light.directionalLightHelper.update();\n    });\n    const shadowBottomGui = shadowFolder.add(Config.shadow, 'bottom', -400, 400).name('Bottom');\n    shadowBottomGui.onChange((value) => {\n      this.controls.enableRotate = false;\n\n      this.light.directionalLight.shadow.camera.bottom = value;\n    });\n    shadowBottomGui.onFinishChange(() => {\n      this.controls.enableRotate = true;\n      this.light.directionalLight.shadow.map.dispose();\n      this.light.directionalLight.shadow.map = null;\n      this.light.directionalLightHelper.update();\n    });\n    const shadowLeftGui = shadowFolder.add(Config.shadow, 'left', -400, 400).name('Left');\n    shadowLeftGui.onChange((value) => {\n      this.controls.enableRotate = false;\n\n      this.light.directionalLight.shadow.camera.left = value;\n    });\n    shadowLeftGui.onFinishChange(() => {\n      this.controls.enableRotate = true;\n      this.light.directionalLight.shadow.map.dispose();\n      this.light.directionalLight.shadow.map = null;\n      this.light.directionalLightHelper.update();\n    });\n    const shadowBiasGui = shadowFolder.add(Config.shadow, 'bias', -0.000010, 1).name('Bias');\n    shadowBiasGui.onChange((value) => {\n      this.controls.enableRotate = false;\n\n      this.light.directionalLight.shadow.bias = value;\n    });\n    shadowBiasGui.onFinishChange(() => {\n      this.controls.enableRotate = true;\n      this.light.directionalLight.shadow.map.dispose();\n      this.light.directionalLight.shadow.map = null;\n      this.light.directionalLightHelper.update();\n    });\n\n\n    // Point Light\n    const pointLightFolder = gui.addFolder('Point Light');\n    pointLightFolder.add(Config.pointLight, 'enabled').name('Enabled').onChange((value) => {\n      this.light.pointLight.visible = value;\n    });\n    pointLightFolder.addColor(Config.pointLight, 'color').name('Color').onChange((value) => {\n      this.light.pointLight.color.setHex(value);\n    });\n    const pointLightIntensityGui = pointLightFolder.add(Config.pointLight, 'intensity', 0, 2).name('Intensity');\n    pointLightIntensityGui.onChange((value) => {\n      this.controls.enableRotate = false;\n\n      this.light.pointLight.intensity = value;\n    });\n    pointLightIntensityGui.onFinishChange(() => {\n      this.controls.enableRotate = true;\n    });\n    const pointLightDistanceGui = pointLightFolder.add(Config.pointLight, 'distance', 0, 1000).name('Distance');\n    pointLightDistanceGui.onChange((value) => {\n      this.controls.enableRotate = false;\n\n      this.light.pointLight.distance = value;\n    });\n    pointLightDistanceGui.onFinishChange(() => {\n      this.controls.enableRotate = true;\n    });\n    const pointLightPositionXGui = pointLightFolder.add(Config.pointLight, 'x', -1000, 1000).name('Position X');\n    pointLightPositionXGui.onChange((value) => {\n      this.controls.enableRotate = false;\n\n      this.light.pointLight.position.x = value;\n    });\n    pointLightPositionXGui.onFinishChange(() => {\n      this.controls.enableRotate = true;\n    });\n    const pointLightPositionYGui = pointLightFolder.add(Config.pointLight, 'y', -1000, 1000).name('Position Y');\n    pointLightPositionYGui.onChange((value) => {\n      this.controls.enableRotate = false;\n\n      this.light.pointLight.position.y = value;\n    });\n    pointLightPositionYGui.onFinishChange(() => {\n      this.controls.enableRotate = true;\n    });\n    const pointLightPositionZGui = pointLightFolder.add(Config.pointLight, 'z', -1000, 1000).name('Position Z');\n    pointLightPositionZGui.onChange((value) => {\n      this.controls.enableRotate = false;\n\n      this.light.pointLight.position.z = value;\n    });\n    pointLightPositionZGui.onFinishChange(() => {\n      this.controls.enableRotate = true;\n    });\n\n\n  //   // Hemi Light\n    const hemiLightFolder = gui.addFolder('Hemi Light');\n    hemiLightFolder.add(Config.hemiLight, 'enabled').name('Enabled').onChange((value) => {\n      this.light.hemiLight.visible = value;\n    });\n    hemiLightFolder.addColor(Config.hemiLight, 'color').name('Color').onChange((value) => {\n      this.light.hemiLight.color.setHex(value);\n    });\n    hemiLightFolder.addColor(Config.hemiLight, 'groundColor').name('ground Color').onChange((value) => {\n      this.light.hemiLight.groundColor.setHex(value);\n    });\n    const hemiLightIntensityGui = hemiLightFolder.add(Config.hemiLight, 'intensity', 0, 2).name('Intensity');\n    hemiLightIntensityGui.onChange((value) => {\n      this.controls.enableRotate = false;\n\n      this.light.hemiLight.intensity = value;\n    });\n    hemiLightIntensityGui.onFinishChange(() => {\n      this.controls.enableRotate = true;\n    });\n    const hemiLightPositionXGui = hemiLightFolder.add(Config.hemiLight, 'x', -1000, 1000).name('Position X');\n    hemiLightPositionXGui.onChange((value) => {\n      this.controls.enableRotate = false;\n\n      this.light.hemiLight.position.x = value;\n    });\n    hemiLightPositionXGui.onFinishChange(() => {\n      this.controls.enableRotate = true;\n    });\n    const hemiLightPositionYGui = hemiLightFolder.add(Config.hemiLight, 'y', -500, 1000).name('Position Y');\n    hemiLightPositionYGui.onChange((value) => {\n      this.controls.enableRotate = false;\n\n      this.light.hemiLight.position.y = value;\n    });\n    hemiLightPositionYGui.onFinishChange(() => {\n      this.controls.enableRotate = true;\n    });\n    const hemiLightPositionZGui = hemiLightFolder.add(Config.hemiLight, 'z', -1000, 1000).name('Position Z');\n    hemiLightPositionZGui.onChange((value) => {\n      this.controls.enableRotate = false;\n\n      this.light.hemiLight.position.z = value;\n    });\n    hemiLightPositionZGui.onFinishChange(() => {\n      this.controls.enableRotate = true;\n    });\n   }\n}\n","// Global imports -\nimport * as THREE from 'three';\nimport TWEEN from 'tween.js';\n\n// Local imports -\n// Components\nimport Renderer from './components/renderer';\nimport Camera from './components/camera';\nimport Light from './components/light';\nimport Controls from './components/controls';\n\n// Helpers\nimport Geometry from './helpers/geometry';\nimport Stats from './helpers/stats';\n\n// Model\nimport Texture from './model/texture';\nimport Model from './model/model';\n\n// Managers\nimport Interaction from './managers/interaction';\nimport DatGUI from './managers/datGUI';\n\n// data\nimport Config from './../data/config';\n// -- End of imports\n\n// This class instantiates and ties all of the components together, starts the loading process and renders the main loop\nexport default class Main {\n  constructor(container) {\n    // Set container property to container element\n    this.container = container;\n\n    // Start Three clock\n    this.clock = new THREE.Clock();\n    this.t = 0;\n    this.line = null;\n    this.count = 0;\n    this.curve = null;\n    this.particles= [];\n    this.traffic = new THREE.Group();\n    this.starsGeometry = null;\n    this.axis = new THREE.Vector3( );\n    // Main scene creation\n    this.scene = new THREE.Scene();\n    //this.scene.fog = new THREE.FogExp2(Config.fog.color, Config.fog.near);\n\n    // Get Device Pixel Ratio first for retina\n    if(window.devicePixelRatio) {\n      Config.dpr = window.devicePixelRatio;\n    }\n\n    // Main renderer constructor\n    this.renderer = new Renderer(this.scene, container);\n\n    // Components instantiations\n    this.camera = new Camera(this.renderer.threeRenderer);\n\n    console.log(this.camera.threeCamera.position)\n    this.controls = new Controls(this.camera.threeCamera, container);\n    this.light = new Light(this.scene);\n\n    // Create and place lights in scene\n    const lights = ['ambient', 'directional', 'point', 'hemi'];\n    lights.forEach((light) => this.light.place(light));\n    // Create and place geo in scene\n\n\n\n    // Set up rStats if dev environment\n    if(Config.isDev && Config.isShowingStats) {\n      this.stats = new Stats(this.renderer);\n      this.stats.setUp();\n    }\n\n    // Instantiate texture class\n    this.texture = new Texture();\n\n    // Start loading the textures and then go on to load the model after the texture Promises have resolved\n    this.texture.load().then(() => {\n      this.manager = new THREE.LoadingManager();\n\n      // Textures loaded, load model\n      this.model = new Model(this.scene, this.manager, this.texture.textures);\n      this.model.load();\n      this.geometry = new Geometry(this.scene, this.texture.textures);\n      this.geometry.make('plane')(130, 130, 1, 1);\n      this.geometry.place([0, 10, 0], [Math.PI / 2, 0, 0]);\n      this.geometry.make('map')(150, 150, 1, 1);\n      this.geometry.place([0, -15, 0], [-Math.PI / 2, 0, 0]);\n      this.geometry.make('cube')(15,15,15);\n      this.geometry.place([0, 30, 0], [Math.PI / 36, Math.PI / 4,0]);\n      var nodeGeometry = new THREE.CylinderGeometry( 6, 6, 2, 32 );\t\n      var nodeMaterial = new THREE.MeshToonMaterial( {\n        transparent: true,\n        flatShading: true,\n        opacity: 1,\n        color: 1570734,\n        emissive: 0,\n        specular: 0,\n        shininess: 0\n      } );\n      var node1 = new THREE.Mesh( nodeGeometry, nodeMaterial );\n    \n      node1.receiveShadows = true;\n      node1.castShadows = true;\n      node1.rotateY(  Math.PI / 4)\n    \n      var node2 = new THREE.Mesh( nodeGeometry, nodeMaterial );\n      node2.position.y = 3;\n      node2.receiveShadows = true;\n      node2.castShadows = true;\n      node2.rotateY(  Math.PI / 4)\n      // cube.rotateX(  Math.PI / 12)\n      // cube.rotateZ(  Math.PI / 12)\n      var node = new THREE.Group();\n      node.add(node1);\n      node.add(node2);\n      node.position.y = this.geometry.plane.position.y+1.1;\n      node.position.x = 45;\n      node.position.z = 50;\n      this.scene.add(node);\n    \n      var secondNode = node.clone();\n      secondNode.position.x = -13;\n      secondNode.position.z = -2.5;\n      this.scene.add(secondNode);\n      var curve = new THREE.CatmullRomCurve3( [\n      new THREE.Vector3(this.geometry.cube.position.x,this.geometry.cube.position.y-7.5,this.geometry.cube.position.z),\n      new THREE.Vector3(this.geometry.cube.position.x,this.geometry.cube.position.y-15,this.geometry.cube.position.z),\n      node.position,\n      new THREE.Vector3(node.position.x, this.geometry.map.position.y, node.position.z)\n      ] );\n      this.curve = curve;\n      var points = curve.getPoints( 30 );\n      var lg = new THREE.BufferGeometry().setFromPoints( points );\n      var lm = new THREE.LineBasicMaterial( { color: 0x0000ff } );\n      this.line = new THREE.Line( lg, lm );\n     // this.scene.add( this.line );\n\n        this.scene.add(this.traffic);\n\n      // onProgress callback\n      this.manager.onProgress = (item, loaded, total) => {\n        console.log(`${item}: ${loaded} ${total}`);\n      };\n\n      // All loaders done now\n      this.manager.onLoad = () => {\n        // Set up interaction manager with the app now that the model is finished loading\n        new Interaction(this.renderer.threeRenderer, this.scene, this.camera.threeCamera, this.controls.threeControls);\n\n        // Add dat.GUI controls if dev\n        if(Config.isDev) {\n          new DatGUI(this, this.model.obj);\n        }\n\n        // Everything is now fully loaded\n        Config.isLoaded = true;\n        this.container.querySelector('#loading').style.display = 'none';\n      };\n    });\n\n    // Start render which does not wait for model fully loaded\n    this.render();\n  }\n\n  render() {\n    // Render rStats if Dev\n    if(Config.isDev && Config.isShowingStats) {\n      Stats.start();\n    }\n\n    // Call render function and pass in created scene and camera\n    this.renderer.render(this.scene, this.camera.threeCamera);\n\n    // rStats has finished determining render call now\n    if(Config.isDev && Config.isShowingStats) {\n      Stats.end();\n    }\n\n    // Delta time is sometimes needed for certain updates\n    //const delta = this.clock.getDelta();\n\n    // Call any vendor or module frame updates here\n    TWEEN.update();\n    this.controls.threeControls.update();\n\n    // RAF\n    if(this.curve !== null){\n   //   console.log(this.traffic);\n\n   // console.log(this.traffic.children);\n   var starsMaterial = new THREE.PointsMaterial( { color: 0x17a7ae } );\n   let starsGeometry = new THREE.Geometry();\n   let star = new THREE.Vector3(Math.random()*2-1,Math.random()*2-1,Math.random()*2-1);\n   starsGeometry.vertices.push(star);\n   var pts = new THREE.Points( starsGeometry, starsMaterial );\n   pts.t = 0;\n   //console.log('wat');\n   //console.log(pts);\n   this.traffic.add(pts);\n   this.traffic.updateMatrix();\n   let me= this;\n    // set the quaternion\n    this.traffic.children.forEach(function(p){\n      (p.t <= 1) ? p.t+=0.005 : me.traffic.remove(p);\n      var up = new THREE.Vector3( 0, 1, 0 );\n      var pp = me.curve.getUtoTmapping(p.t)\n      var pos =  me.curve.getPoint(p.t);\n      var tangent = me.curve.getTangent(p.t).normalize();\n     // console.log(tangent);\n      let axis = new THREE.Vector3();\n      axis.crossVectors( up, tangent ).normalize();\n      var radians = Math.acos( up.dot( tangent ) );\n      p.quaternion.setFromAxisAngle( axis, radians );\n      p.position.x = pos.x;\n      p.position.y = pos.y;\n      p.position.z =  pos.z;\n      p.updateMatrix();\n    })\n    me.traffic = this.traffic\n   // .position.set(pos.x, pos.y, pos.z);\n\n    }\n    requestAnimationFrame(this.render.bind(this)); // Bind the main class instead of window object\n  }\n}\n","import Config from './data/config';\nimport Detector from './utils/detector';\nimport Main from './app/main';\n\n// Styles\nimport './../css/app.scss';\n\n// Check environment and set the Config helper\nif(__ENV__ === 'dev') {\n  console.log('----- RUNNING IN DEV ENVIRONMENT! -----');\n\n  Config.isDev = true;\n}\n\nfunction init() {\n  // Check for webGL capabilities\n  if(!Detector.webgl) {\n    Detector.addGetWebGLMessage();\n  } else {\n    const container = document.getElementById('appContainer');\n    new Main(container);\n  }\n}\n\ninit();\n"],"sourceRoot":""}